#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API endpoints –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import requests
import json
import sys

def test_api_endpoint(url, data, description):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoint"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {description}")
    print(f"URL: {url}")
    print(f"–î–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2)}")
    print("-" * 50)
    
    try:
        response = requests.post(url, json=data, timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(response.headers)}")
        
        try:
            response_data = response.json()
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(response_data, indent=2, ensure_ascii=False)}")
        except:
            print(f"–û—Ç–≤–µ—Ç (—Ç–µ–∫—Å—Ç): {response.text}")
            
        if response.status_code == 200:
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ùå –û—à–∏–±–∫–∞")
            
    except requests.exceptions.ConnectionError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    except requests.exceptions.Timeout as e:
        print(f"‚ùå –¢–∞–π–º–∞—É—Ç: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_bot_server():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–µ—Ä –±–æ—Ç–∞"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–µ—Ä Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "telegramId": "123456789",  # –¢–µ—Å—Ç–æ–≤—ã–π ID
        "clubId": "test-club-id",
        "teamId": "test-team-id",
        "date": "2024-01-15",
        "surveyType": "morning"
    }
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ–ø—Ä–æ—Å–æ–≤
    test_api_endpoint(
        "http://158.160.189.99:8080/send-morning-survey",
        test_data,
        "–û—Ç–ø—Ä–∞–≤–∫–∞ —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –æ–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ –±–æ—Ç–∞"
    )
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint –¥–ª—è RPE –æ–ø—Ä–æ—Å–æ–≤
    rpe_data = {
        "telegramId": "123456789",
        "clubId": "test-club-id", 
        "teamId": "test-team-id",
        "date": "2024-01-15",
        "surveyType": "rpe"
    }
    
    test_api_endpoint(
        "http://158.160.189.99:8080/send-rpe-survey",
        rpe_data,
        "–û—Ç–ø—Ä–∞–≤–∫–∞ RPE –æ–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ –±–æ—Ç–∞"
    )

def test_nextjs_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Next.js API endpoints"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º Next.js API endpoints")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ–ø—Ä–æ—Å–æ–≤
    morning_data = {
        "playerId": "test-player-id",
        "teamId": "test-team-id", 
        "date": "2024-01-15"
    }
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ–ø—Ä–æ—Å–æ–≤
    test_api_endpoint(
        "http://localhost:3000/api/surveys/morning",
        morning_data,
        "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –æ–ø—Ä–æ—Å–∞"
    )
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è RPE –æ–ø—Ä–æ—Å–æ–≤
    rpe_data = {
        "playerId": "test-player-id",
        "teamId": "test-team-id",
        "date": "2024-01-15"
    }
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint –¥–ª—è RPE –æ–ø—Ä–æ—Å–æ–≤
    test_api_endpoint(
        "http://localhost:3000/api/surveys/rpe",
        rpe_data,
        "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ RPE –æ–ø—Ä–æ—Å–∞"
    )

def check_bot_server_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ –±–æ—Ç–∞"""
    print("\nüì° –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ –±–æ—Ç–∞")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –±–æ—Ç–∞
        response = requests.get("http://158.160.189.99:8080", timeout=5)
        print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
        return True
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("   2. –ù–µ–≤–µ—Ä–Ω—ã–π IP –∞–¥—Ä–µ—Å")
        print("   3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False

def check_nextjs_server():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å Next.js —Å–µ—Ä–≤–µ—Ä–∞"""
    print("\nüåê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Next.js —Å–µ—Ä–≤–µ—Ä–∞")
    print("=" * 50)
    
    try:
        response = requests.get("http://localhost:3000", timeout=5)
        print(f"‚úÖ Next.js —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
        return True
    except requests.exceptions.ConnectionError:
        print("‚ùå Next.js —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("   2. –ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—Ç")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False

def main():
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API endpoints –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä—ã
    bot_available = check_bot_server_status()
    nextjs_available = check_nextjs_server()
    
    if not bot_available:
        print("\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –°–µ—Ä–≤–µ—Ä –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
        print("   –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏ 500")
        print("   –†–µ—à–µ–Ω–∏–µ: –ó–∞–ø—É—Å—Ç–∏—Ç–µ Telegram –±–æ—Ç–∞")
        return
    
    if not nextjs_available:
        print("\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: Next.js —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
        print("   –†–µ—à–µ–Ω–∏–µ: –ó–∞–ø—É—Å—Ç–∏—Ç–µ Next.js —Å–µ—Ä–≤–µ—Ä")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoints
    test_bot_server()
    test_nextjs_api()
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("=" * 30)
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Next.js —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏")
    print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ IP –∞–¥—Ä–µ—Å –±–æ—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")

if __name__ == "__main__":
    main()
