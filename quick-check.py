#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å —Ä–∞—Å—Å—ã–ª–∫–æ–π
"""

import os
import psycopg2
import psycopg2.extras
from dotenv import load_dotenv

load_dotenv()

DB_CONFIG = {
    'host': 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
    'port': 6432,
    'database': 'uteam',
    'user': 'uteam_bot_reader',
    'password': 'uteambot567234!',
    'sslmode': 'verify-ca',
    'sslrootcert': './CA.pem'
}

def quick_check(pin_code):
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º"""
    print(f"üîç –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è PIN: {pin_code}")
    print("=" * 50)
    
    try:
        connection = psycopg2.connect(**DB_CONFIG)
        with connection.cursor(cursor_factory=psycopg2.extras.RealDictCursor) as cursor:
            
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–≥—Ä–æ–∫–∞
            cursor.execute("""
                SELECT p.*, t."name" as "teamName", t."clubId"
                FROM "Player" p
                LEFT JOIN "Team" t ON p."teamId" = t."id"
                WHERE p."pinCode" = %s
            """, (pin_code,))
            player = cursor.fetchone()
            
            if not player:
                print("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            print(f"‚úÖ –ò–≥—Ä–æ–∫: {player['firstName']} {player['lastName']}")
            print(f"   Telegram ID: {player['telegramId'] or '–ù–ï–¢'}")
            print(f"   –ö–æ–º–∞–Ω–¥–∞: {player['teamName']}")
            
            if not player['telegramId']:
                print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç Telegram ID")
                print("   –†–µ—à–µ–Ω–∏–µ: –ò–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å /start –±–æ—Ç—É")
                return
            
            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏
            cursor.execute("""
                SELECT ss.*, t."timezone"
                FROM "SurveySchedule" ss
                LEFT JOIN "Team" t ON ss."teamId" = t."id"
                WHERE ss."teamId" = %s AND ss."surveyType" = 'morning'
            """, (player['teamId'],))
            schedule = cursor.fetchone()
            
            if not schedule:
                print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞—Å—Å—ã–ª–∫–∏")
                print("   –†–µ—à–µ–Ω–∏–µ: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
                return
            
            print(f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞:")
            print(f"   –í—Ä–µ–º—è: {schedule['sendTime']}")
            print(f"   –í–∫–ª—é—á–µ–Ω–∞: {schedule['enabled']}")
            
            if not schedule['enabled']:
                print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞")
                print("   –†–µ—à–µ–Ω–∏–µ: –í–∫–ª—é—á–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
                return
            
            # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
            if schedule['recipientsConfig']:
                import json
                try:
                    config = json.loads(schedule['recipientsConfig'])
                    if config.get('isIndividualMode'):
                        selected_ids = config.get('selectedPlayerIds', [])
                        print(f"‚úÖ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º: {len(selected_ids)} –∏–≥—Ä–æ–∫–æ–≤")
                        if player['id'] not in selected_ids:
                            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ò–≥—Ä–æ–∫ –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π")
                            print("   –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤—å—Ç–µ –∏–≥—Ä–æ–∫–∞ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π")
                            return
                        else:
                            print("‚úÖ –ò–≥—Ä–æ–∫ –≤–∫–ª—é—á–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π")
                    else:
                        print("‚úÖ –û–±—â–∏–π —Ä–µ–∂–∏–º: –≤—Å–µ –∏–≥—Ä–æ–∫–∏ –∫–æ–º–∞–Ω–¥—ã")
                except:
                    print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π")
            else:
                print("‚úÖ –û–±—â–∏–π —Ä–µ–∂–∏–º: –≤—Å–µ –∏–≥—Ä–æ–∫–∏ –∫–æ–º–∞–Ω–¥—ã")
            
            # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã
            cursor.execute("""
                SELECT COUNT(*) as count
                FROM "Player"
                WHERE "teamId" = %s AND "telegramId" IS NOT NULL
            """, (player['teamId'],))
            team_count = cursor.fetchone()['count']
            print(f"‚úÖ –í –∫–æ–º–∞–Ω–¥–µ {team_count} –∏–≥—Ä–æ–∫–æ–≤ —Å Telegram ID")
            
            print("\n‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!")
            print("   –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –≤—Å–µ –µ—â–µ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:")
            print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–∞—Å—Ç—É–ø–∏–ª–æ")
            print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
            print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        if 'connection' in locals():
            connection.close()

if __name__ == "__main__":
    pin_code = input("–í–≤–µ–¥–∏—Ç–µ PIN-–∫–æ–¥ –∏–≥—Ä–æ–∫–∞: ").strip()
    if pin_code:
        quick_check(pin_code)
    else:
        print("‚ùå PIN-–∫–æ–¥ –Ω–µ –≤–≤–µ–¥–µ–Ω")
