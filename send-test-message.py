#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–≥—Ä–æ–∫—É
–ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import os
import asyncio
import psycopg2
import psycopg2.extras
from aiogram import Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from dotenv import load_dotenv

load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_CONFIG = {
    'host': 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
    'port': 6432,
    'database': 'uteam',
    'user': 'uteam_bot_reader',
    'password': 'uteambot567234!',
    'sslmode': 'verify-ca',
    'sslrootcert': './CA.pem'
}

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '7555689553:AAFSDvBcAC_PU7o5vq3vVoGy5DS8R9q5aPU')

def get_db_connection():
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        connection = psycopg2.connect(**DB_CONFIG)
        return connection
    except Exception as e:
        print(f"[DB] –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def get_player_by_pin(pin_code):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –ø–æ PIN-–∫–æ–¥—É"""
    connection = get_db_connection()
    if not connection:
        return None
    
    try:
        with connection.cursor(cursor_factory=psycopg2.extras.RealDictCursor) as cursor:
            query = """
            SELECT 
                p."id",
                p."firstName",
                p."lastName",
                p."telegramId",
                p."pinCode",
                p."language",
                p."teamId",
                t."name" as "teamName",
                t."clubId"
            FROM "Player" p
            LEFT JOIN "Team" t ON p."teamId" = t."id"
            WHERE p."pinCode" = %s
            """
            cursor.execute(query, (pin_code,))
            player = cursor.fetchone()
            return dict(player) if player else None
    except Exception as e:
        print(f"[DB] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞: {e}")
        return None
    finally:
        connection.close()

async def send_test_message(telegram_id, player_name, language='ru'):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É"""
    bot = Bot(token=BOT_TOKEN)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if language == 'en':
        text = (
            f"Hello {player_name}! This is a test message from UTeam bot.\n\n"
            f"If you receive this message, the bot is working correctly.\n\n"
            f"Your Telegram ID: {telegram_id}"
        )
        button_text = "‚úÖ Test received"
    else:
        text = (
            f"–ü—Ä–∏–≤–µ—Ç, {player_name}! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ UTeam.\n\n"
            f"–ï—Å–ª–∏ —Ç—ã –ø–æ–ª—É—á–∏–ª —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.\n\n"
            f"–¢–≤–æ–π Telegram ID: {telegram_id}"
        )
        button_text = "‚úÖ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω"
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=button_text, callback_data="test_received")]
    ])
    
    try:
        await bot.send_message(
            telegram_id,
            text,
            reply_markup=keyboard,
            parse_mode="HTML"
        )
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–≥—Ä–æ–∫—É {player_name} (ID: {telegram_id})")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False
    finally:
        await bot.session.close()

async def send_survey_message(telegram_id, player_name, pin_code, club_id, language='ru', survey_type='morning'):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø—Ä–æ—Å–æ–º"""
    bot = Bot(token=BOT_TOKEN)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
    link = f"https://api.uteam.club/survey?tenantId={club_id}&type={survey_type}"
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if survey_type == 'morning':
        if language == 'en':
            text = (
                f"Good morning, {player_name}! Please complete the morning survey.\n\n"
                f"Your pin code for login:\n<code>{pin_code}</code>"
            )
            button_text = "üìù Take the survey"
        else:
            text = (
                f"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, {player_name}! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏ —É—Ç—Ä–µ–Ω–Ω–∏–π –æ–ø—Ä–æ—Å–Ω–∏–∫.\n\n"
                f"–¢–≤–æ–π –ø–∏–Ω–∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞:\n<code>{pin_code}</code>"
            )
            button_text = "üìù –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å"
    else:  # RPE
        if language == 'en':
            text = (
                f"Hello {player_name}! Please rate how hard your training was (RPE).\n\n"
                f"Your pin code for login:\n<code>{pin_code}</code>"
            )
            button_text = "üìù Rate RPE"
        else:
            text = (
                f"–ü—Ä–∏–≤–µ—Ç, {player_name}! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—è–∂—ë–ª–æ–π –±—ã–ª–∞ —Ç–≤–æ—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ (RPE).\n\n"
                f"–¢–≤–æ–π –ø–∏–Ω–∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞:\n<code>{pin_code}</code>"
            )
            button_text = "üìù –û—Ü–µ–Ω–∏—Ç—å RPE"
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=button_text, url=link)]
    ])
    
    try:
        await bot.send_message(
            telegram_id,
            text,
            reply_markup=keyboard,
            parse_mode="HTML"
        )
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø—Ä–æ—Å–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–≥—Ä–æ–∫—É {player_name} (ID: {telegram_id})")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False
    finally:
        await bot.session.close()

async def main():
    print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–≥—Ä–æ–∫—É")
    print("=" * 50)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º PIN-–∫–æ–¥
    pin_code = input("–í–≤–µ–¥–∏—Ç–µ PIN-–∫–æ–¥ –∏–≥—Ä–æ–∫–∞: ").strip()
    if not pin_code:
        print("‚ùå PIN-–∫–æ–¥ –Ω–µ –≤–≤–µ–¥–µ–Ω")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
    player = get_player_by_pin(pin_code)
    if not player:
        print("‚ùå –ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º PIN-–∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∏–≥—Ä–æ–∫: {player['firstName']} {player['lastName']}")
    print(f"   Telegram ID: {player['telegramId']}")
    print(f"   –Ø–∑—ã–∫: {player['language']}")
    print(f"   –ö–æ–º–∞–Ω–¥–∞: {player['teamName']}")
    
    if not player['telegramId']:
        print("‚ùå –£ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç Telegram ID")
        print("   –†–µ—à–µ–Ω–∏–µ: –ò–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å /start –±–æ—Ç—É –∏ –≤–≤–µ—Å—Ç–∏ PIN-–∫–æ–¥")
        return
    
    # –í—ã–±–∏—Ä–∞–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è:")
    print("1. –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    print("2. –£—Ç—Ä–µ–Ω–Ω–∏–π –æ–ø—Ä–æ—Å")
    print("3. RPE –æ–ø—Ä–æ—Å")
    
    choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ").strip()
    
    if choice == "1":
        # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        success = await send_test_message(
            player['telegramId'],
            f"{player['firstName']} {player['lastName']}",
            player['language']
        )
    elif choice == "2":
        # –£—Ç—Ä–µ–Ω–Ω–∏–π –æ–ø—Ä–æ—Å
        success = await send_survey_message(
            player['telegramId'],
            f"{player['firstName']} {player['lastName']}",
            player['pinCode'],
            player['clubId'],
            player['language'],
            'morning'
        )
    elif choice == "3":
        # RPE –æ–ø—Ä–æ—Å
        success = await send_survey_message(
            player['telegramId'],
            f"{player['firstName']} {player['lastName']}",
            player['pinCode'],
            player['clubId'],
            player['language'],
            'rpe'
        )
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
        return
    
    if success:
        print("\n‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–ª—É—á–∏–ª –ª–∏ –∏–≥—Ä–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. –ò–≥—Ä–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞")
        print("   2. –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        print("   3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é")

if __name__ == "__main__":
    asyncio.run(main())
