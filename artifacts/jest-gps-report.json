{"numFailedTestSuites":2,"numFailedTests":9,"numPassedTestSuites":3,"numPassedTests":31,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":5,"numTotalTests":40,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1757490524944,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["GPS Ingest Fixtures E2E"],"duration":332,"failing":false,"failureDetails":[{"matcherResult":{"actual":2,"expected":1,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n    at Object.toBe (/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.fixtures.e2e.test.ts:36:39)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"GPS Ingest Fixtures E2E Polar demo CSV should be processed correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1757490526666,"status":"failed","title":"Polar demo CSV should be processed correctly"},{"ancestorTitles":["GPS Ingest Fixtures E2E"],"duration":686,"failing":false,"failureDetails":[{"matcherResult":{"actual":2,"expected":1,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n    at Object.toBe (/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.fixtures.e2e.test.ts:80:39)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"GPS Ingest Fixtures E2E STATSports demo CSV should be processed correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1757490527000,"status":"failed","title":"STATSports demo CSV should be processed correctly"}],"endTime":1757490527840,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGPS Ingest Fixtures E2E › Polar demo CSV should be processed correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31m2\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 |\u001b[39m \u001b[32m    `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m     \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 36 |\u001b[39m     expect(profileResult\u001b[33m.\u001b[39mrows\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m     \u001b[36mconst\u001b[39m profile \u001b[33m=\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m       id\u001b[33m:\u001b[39m profileResult\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mid\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m       gpsSystem\u001b[33m:\u001b[39m profileResult\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mgpsSystem\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/services/gps/__tests__/ingest.fixtures.e2e.test.ts\u001b[39m\u001b[0m\u001b[2m:36:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGPS Ingest Fixtures E2E › STATSports demo CSV should be processed correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31m2\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 78 |\u001b[39m \u001b[32m    `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 79 |\u001b[39m     \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 80 |\u001b[39m     expect(profileResult\u001b[33m.\u001b[39mrows\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 81 |\u001b[39m     \u001b[36mconst\u001b[39m profile \u001b[33m=\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m       id\u001b[33m:\u001b[39m profileResult\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mid\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 83 |\u001b[39m       gpsSystem\u001b[33m:\u001b[39m profileResult\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mgpsSystem\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/services/gps/__tests__/ingest.fixtures.e2e.test.ts\u001b[39m\u001b[0m\u001b[2m:80:39)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.fixtures.e2e.test.ts","startTime":1757490524969,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["GPS Ingest Service","normalizeHeaders"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":["name","distance","speed"],"expected":["Name","Distance","Speed"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"Name\",\u001b[39m\n\u001b[32m-   \"Distance\",\u001b[39m\n\u001b[32m-   \"Speed\",\u001b[39m\n\u001b[31m+   \"name\",\u001b[39m\n\u001b[31m+   \"distance\",\u001b[39m\n\u001b[31m+   \"speed\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"Name\",\u001b[39m\n\u001b[32m-   \"Distance\",\u001b[39m\n\u001b[32m-   \"Speed\",\u001b[39m\n\u001b[31m+   \"name\",\u001b[39m\n\u001b[31m+   \"distance\",\u001b[39m\n\u001b[31m+   \"speed\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.toEqual (/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.service.test.ts:16:22)\n    at Promise.finally.completed (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"GPS Ingest Service normalizeHeaders should trim and filter empty headers","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1757490527875,"status":"failed","title":"should trim and filter empty headers"},{"ancestorTitles":["GPS Ingest Service","normalizeHeaders"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"GPS Ingest Service normalizeHeaders should handle empty array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1757490527881,"status":"passed","title":"should handle empty array"},{"ancestorTitles":["GPS Ingest Service","applyProfile"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m2\u001b[39m\nReceived length: \u001b[31m0\u001b[39m\nReceived array:  \u001b[31m[]\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m2\u001b[39m\nReceived length: \u001b[31m0\u001b[39m\nReceived array:  \u001b[31m[]\u001b[39m\n    at Object.toHaveLength (/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.service.test.ts:66:36)\n    at Promise.finally.completed (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"GPS Ingest Service applyProfile should map columns correctly by header names","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1757490527881,"status":"failed","title":"should map columns correctly by header names"},{"ancestorTitles":["GPS Ingest Service","applyProfile"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m2\u001b[39m\nReceived length: \u001b[31m0\u001b[39m\nReceived array:  \u001b[31m[]\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m2\u001b[39m\nReceived length: \u001b[31m0\u001b[39m\nReceived array:  \u001b[31m[]\u001b[39m\n    at Object.toHaveLength (/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.service.test.ts:91:36)\n    at Promise.finally.completed (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"GPS Ingest Service applyProfile should handle case-insensitive header matching","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1757490527882,"status":"failed","title":"should handle case-insensitive header matching"},{"ancestorTitles":["GPS Ingest Service","applyProfile"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m\"Column \\\"Distance\\\" not found in file headers\"\u001b[39m\nReceived array: \u001b[31m[]\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m\"Column \\\"Distance\\\" not found in file headers\"\u001b[39m\nReceived array: \u001b[31m[]\u001b[39m\n    at Object.toContain (/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.service.test.ts:106:31)\n    at Promise.finally.completed (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"GPS Ingest Service applyProfile should generate warnings for missing columns","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1757490527882,"status":"failed","title":"should generate warnings for missing columns"},{"ancestorTitles":["GPS Ingest Service","applyProfile"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'canonicalKey')\n    at Object.canonicalKey (/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.service.test.ts:138:38)\n    at Promise.finally.completed (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"GPS Ingest Service applyProfile should sort columns by order","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1757490527882,"status":"failed","title":"should sort columns by order"},{"ancestorTitles":["GPS Ingest Service","applyProfile"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m2\u001b[39m\nReceived length: \u001b[31m0\u001b[39m\nReceived array:  \u001b[31m[]\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m2\u001b[39m\nReceived length: \u001b[31m0\u001b[39m\nReceived array:  \u001b[31m[]\u001b[39m\n    at Object.toHaveLength (/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.service.test.ts:150:36)\n    at Promise.finally.completed (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/artem/Desktop/uteam-multi/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/artem/Desktop/uteam-multi/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"GPS Ingest Service applyProfile should skip formula columns","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1757490527883,"status":"failed","title":"should skip formula columns"},{"ancestorTitles":["GPS Ingest Service","parseSpreadsheet"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":["name","distance"],"expected":["Name","Distance"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"Name\",\u001b[39m\n\u001b[32m-   \"Distance\",\u001b[39m\n\u001b[31m+   \"name\",\u001b[39m\n\u001b[31m+   \"distance\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"Name\",\u001b[39m\n\u001b[32m-   \"Distance\",\u001b[39m\n\u001b[31m+   \"name\",\u001b[39m\n\u001b[31m+   \"distance\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.toEqual (/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.service.test.ts:172:30)"],"fullName":"GPS Ingest Service parseSpreadsheet should parse CSV files","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1757490527883,"status":"failed","title":"should parse CSV files"},{"ancestorTitles":["GPS Ingest Service","parseSpreadsheet"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"GPS Ingest Service parseSpreadsheet should throw error for empty file","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1757490527884,"status":"passed","title":"should throw error for empty file"},{"ancestorTitles":["GPS Ingest Service","parseSpreadsheet"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"GPS Ingest Service parseSpreadsheet should throw error for file with no sheets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1757490527885,"status":"passed","title":"should throw error for file with no sheets"}],"endTime":1757490527901,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGPS Ingest Service › normalizeHeaders › should trim and filter empty headers\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 3\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"Name\",\u001b[39m\n    \u001b[32m-   \"Distance\",\u001b[39m\n    \u001b[32m-   \"Speed\",\u001b[39m\n    \u001b[31m+   \"name\",\u001b[39m\n    \u001b[31m+   \"distance\",\u001b[39m\n    \u001b[31m+   \"speed\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 |\u001b[39m       \u001b[36mconst\u001b[39m headers \u001b[33m=\u001b[39m [\u001b[32m'  Name  '\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'  Distance  '\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'  '\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Speed'\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeHeaders(headers)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 16 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[32m'Name'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Distance'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Speed'\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m     it(\u001b[32m'should handle empty array'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/services/gps/__tests__/ingest.service.test.ts\u001b[39m\u001b[0m\u001b[2m:16:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGPS Ingest Service › applyProfile › should map columns correctly by header names\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected length: \u001b[32m2\u001b[39m\n    Received length: \u001b[31m0\u001b[39m\n    Received array:  \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 64 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m applyProfile(parsed\u001b[33m,\u001b[39m mockProfile)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 65 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 66 |\u001b[39m       expect(result\u001b[33m.\u001b[39mmappedColumns)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m       expect(result\u001b[33m.\u001b[39mmappedColumns[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m         sourceHeader\u001b[33m:\u001b[39m \u001b[32m'Name'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 69 |\u001b[39m         canonicalKey\u001b[33m:\u001b[39m \u001b[32m'athlete_name'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveLength (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/services/gps/__tests__/ingest.service.test.ts\u001b[39m\u001b[0m\u001b[2m:66:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGPS Ingest Service › applyProfile › should handle case-insensitive header matching\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected length: \u001b[32m2\u001b[39m\n    Received length: \u001b[31m0\u001b[39m\n    Received array:  \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m applyProfile(parsed\u001b[33m,\u001b[39m mockProfile)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 91 |\u001b[39m       expect(result\u001b[33m.\u001b[39mmappedColumns)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdataRows\u001b[33m.\u001b[39mathlete_name)\u001b[33m.\u001b[39mtoEqual([\u001b[32m'Player 1'\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 93 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdataRows\u001b[33m.\u001b[39mtotal_distance_m)\u001b[33m.\u001b[39mtoEqual([\u001b[32m'1000'\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 94 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveLength (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/services/gps/__tests__/ingest.service.test.ts\u001b[39m\u001b[0m\u001b[2m:91:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGPS Ingest Service › applyProfile › should generate warnings for missing columns\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected value: \u001b[32m\"Column \\\"Distance\\\" not found in file headers\"\u001b[39m\n    Received array: \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 104 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m applyProfile(parsed\u001b[33m,\u001b[39m mockProfile)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 105 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 106 |\u001b[39m       expect(result\u001b[33m.\u001b[39mwarnings)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Column \"Distance\" not found in file headers'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m       expect(result\u001b[33m.\u001b[39mmappedColumns)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Only 'Name' mapped\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 109 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toContain (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/services/gps/__tests__/ingest.service.test.ts\u001b[39m\u001b[0m\u001b[2m:106:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGPS Ingest Service › applyProfile › should sort columns by order\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'canonicalKey')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 136 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m applyProfile(parsed\u001b[33m,\u001b[39m profileWithOrder)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 137 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 138 |\u001b[39m       expect(result\u001b[33m.\u001b[39mmappedColumns[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mcanonicalKey)\u001b[33m.\u001b[39mtoBe(\u001b[32m'first_field'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 139 |\u001b[39m       expect(result\u001b[33m.\u001b[39mmappedColumns[\u001b[35m1\u001b[39m]\u001b[33m.\u001b[39mcanonicalKey)\u001b[33m.\u001b[39mtoBe(\u001b[32m'second_field'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 140 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 141 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.canonicalKey (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/services/gps/__tests__/ingest.service.test.ts\u001b[39m\u001b[0m\u001b[2m:138:38)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGPS Ingest Service › applyProfile › should skip formula columns\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected length: \u001b[32m2\u001b[39m\n    Received length: \u001b[31m0\u001b[39m\n    Received array:  \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 148 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m applyProfile(parsed\u001b[33m,\u001b[39m mockProfile)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 149 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 150 |\u001b[39m       expect(result\u001b[33m.\u001b[39mmappedColumns)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 151 |\u001b[39m       expect(result\u001b[33m.\u001b[39mmappedColumns\u001b[33m.\u001b[39mevery(col \u001b[33m=>\u001b[39m col\u001b[33m.\u001b[39mcanonicalKey \u001b[33m!==\u001b[39m \u001b[32m'calculated_field'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 152 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 153 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveLength (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/services/gps/__tests__/ingest.service.test.ts\u001b[39m\u001b[0m\u001b[2m:150:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGPS Ingest Service › parseSpreadsheet › should parse CSV files\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"Name\",\u001b[39m\n    \u001b[32m-   \"Distance\",\u001b[39m\n    \u001b[31m+   \"name\",\u001b[39m\n    \u001b[31m+   \"distance\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m parseSpreadsheet(buffer\u001b[33m,\u001b[39m \u001b[32m'test.csv'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 171 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 172 |\u001b[39m       expect(result\u001b[33m.\u001b[39mheaders)\u001b[33m.\u001b[39mtoEqual([\u001b[32m'Name'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Distance'\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 173 |\u001b[39m       expect(result\u001b[33m.\u001b[39mrows)\u001b[33m.\u001b[39mtoEqual([[\u001b[32m'Player 1'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'1000'\u001b[39m]])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 174 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 175 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/services/gps/__tests__/ingest.service.test.ts\u001b[39m\u001b[0m\u001b[2m:172:30)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/ingest.service.test.ts","startTime":1757490527844,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["suggestCanonical"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should suggest total_distance_m for TD variations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1757490527935,"status":"passed","title":"should suggest total_distance_m for TD variations"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should suggest max_speed_ms for Max Speed variations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1757490527937,"status":"passed","title":"should suggest max_speed_ms for Max Speed variations"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should suggest hsr_ratio for HSR% variations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1757490527937,"status":"passed","title":"should suggest hsr_ratio for HSR% variations"},{"ancestorTitles":["suggestCanonical"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should suggest hsr_distance_m for HSR distance variations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1757490527937,"status":"passed","title":"should suggest hsr_distance_m for HSR distance variations"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should suggest zone metrics for zone variations","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1757490527938,"status":"passed","title":"should suggest zone metrics for zone variations"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should suggest acc_count for accelerations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1757490527938,"status":"passed","title":"should suggest acc_count for accelerations"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should suggest dec_count for decelerations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1757490527938,"status":"passed","title":"should suggest dec_count for decelerations"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should suggest duration_s for time variations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1757490527939,"status":"passed","title":"should suggest duration_s for time variations"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should suggest sprint_count for sprints","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1757490527939,"status":"passed","title":"should suggest sprint_count for sprints"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should suggest avg_speed_ms for speed variations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1757490527939,"status":"passed","title":"should suggest avg_speed_ms for speed variations"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should handle cyrillic characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1757490527940,"status":"passed","title":"should handle cyrillic characters"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should handle special characters and spaces","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1757490527940,"status":"passed","title":"should handle special characters and spaces"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should return null for unknown headers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1757490527940,"status":"passed","title":"should return null for unknown headers"},{"ancestorTitles":["suggestCanonical"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should handle null and undefined inputs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1757490527940,"status":"passed","title":"should handle null and undefined inputs"},{"ancestorTitles":["suggestCanonical"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"suggestCanonical should be case insensitive","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1757490527941,"status":"passed","title":"should be case insensitive"}],"endTime":1757490527941,"message":"","name":"/Users/artem/Desktop/uteam-multi/src/canon/__tests__/suggest.test.ts","startTime":1757490527903,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["unit conversions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"unit conversions km/h <-> m/s","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1757490527973,"status":"passed","title":"km/h <-> m/s"},{"ancestorTitles":["unit conversions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"unit conversions min -> s","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1757490527974,"status":"passed","title":"min -> s"},{"ancestorTitles":["unit conversions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"unit conversions % -> ratio","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1757490527974,"status":"passed","title":"% -> ratio"},{"ancestorTitles":["registry"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"registry metric keys unique","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1757490527974,"status":"passed","title":"metric keys unique"},{"ancestorTitles":["registry"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"registry groups reference existing metrics","invocations":1,"location":null,"numPassingAsserts":62,"retryReasons":[],"startAt":1757490527974,"status":"passed","title":"groups reference existing metrics"}],"endTime":1757490527976,"message":"","name":"/Users/artem/Desktop/uteam-multi/src/canon/__tests__/units.test.ts","startTime":1757490527945,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Profile Snapshot Service"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Profile Snapshot Service should build snapshot from profile with column mapping","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1757490528008,"status":"passed","title":"should build snapshot from profile with column mapping"},{"ancestorTitles":["Profile Snapshot Service"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Profile Snapshot Service should sort columns by order","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1757490528010,"status":"passed","title":"should sort columns by order"},{"ancestorTitles":["Profile Snapshot Service"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Profile Snapshot Service should filter invisible columns","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1757490528010,"status":"passed","title":"should filter invisible columns"},{"ancestorTitles":["Profile Snapshot Service"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Profile Snapshot Service should handle missing displayName and unit","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1757490528010,"status":"passed","title":"should handle missing displayName and unit"},{"ancestorTitles":["Profile Snapshot Service"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Profile Snapshot Service should filter out non-column types","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1757490528010,"status":"passed","title":"should filter out non-column types"},{"ancestorTitles":["Profile Snapshot Service"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Profile Snapshot Service should handle missing columnMapping","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1757490528011,"status":"passed","title":"should handle missing columnMapping"},{"ancestorTitles":["Profile Snapshot Service"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Profile Snapshot Service should sort columns by order","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1757490528011,"status":"passed","title":"should sort columns by order"},{"ancestorTitles":["Profile Snapshot Service"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Profile Snapshot Service should use default values for missing fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1757490528011,"status":"passed","title":"should use default values for missing fields"}],"endTime":1757490528012,"message":"","name":"/Users/artem/Desktop/uteam-multi/src/services/gps/__tests__/profileSnapshot.service.test.ts","startTime":1757490527978,"status":"passed","summary":""}],"wasInterrupted":false}
