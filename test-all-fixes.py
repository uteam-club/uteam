#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import requests
import json
import psycopg2
import psycopg2.extras
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_CONFIG = {
    'host': 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
    'port': 6432,
    'database': 'uteam',
    'user': 'uteam_bot_reader',
    'password': 'uteambot567234!',
    'sslmode': 'require'
}

def get_db_connection():
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        connection = psycopg2.connect(**DB_CONFIG)
        return connection
    except Exception as e:
        print(f"[DB] –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def get_test_player():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Å Telegram ID"""
    connection = get_db_connection()
    if not connection:
        return None
    
    try:
        with connection.cursor(cursor_factory=psycopg2.extras.RealDictCursor) as cursor:
            cursor.execute("""
                SELECT p."id", p."firstName", p."lastName", p."telegramId", p."pinCode",
                       t."clubId", t."id" as "teamId", t."name" as "teamName"
                FROM "Player" p
                LEFT JOIN "Team" t ON p."teamId" = t."id"
                WHERE p."telegramId" IS NOT NULL
                LIMIT 1
            """)
            player = cursor.fetchone()
            return dict(player) if player else None
    except Exception as e:
        print(f"[DB] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞: {e}")
        return None
    finally:
        connection.close()

def test_telegram_bot_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç endpoints Telegram –±–æ—Ç–∞"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    player = get_test_player()
    if not player:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∏–≥—Ä–æ–∫ —Å Telegram ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return False
    
    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∏–≥—Ä–æ–∫: {player['firstName']} {player['lastName']}")
    print(f"   Telegram ID: {player['telegramId']}")
    print(f"   –ö–æ–º–∞–Ω–¥–∞: {player['teamName']}")
    
    # –¢–µ—Å—Ç 1: –£—Ç—Ä–µ–Ω–Ω–∏–π –æ–ø—Ä–æ—Å
    print(f"\nüì§ –¢–µ—Å—Ç 1: –£—Ç—Ä–µ–Ω–Ω–∏–π –æ–ø—Ä–æ—Å")
    morning_data = {
        "telegramId": str(player['telegramId']),
        "clubId": str(player['clubId']),
        "teamId": str(player['teamId']),
        "date": "2024-01-15",
        "surveyType": "morning"
    }
    
    try:
        response = requests.post(
            "http://158.160.189.99:8080/send-morning-survey",
            json=morning_data,
            timeout=10
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            print("   ‚úÖ –£—Ç—Ä–µ–Ω–Ω–∏–π –æ–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞ —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –æ–ø—Ä–æ—Å–∞")
            return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: RPE –æ–ø—Ä–æ—Å
    print(f"\nüì§ –¢–µ—Å—Ç 2: RPE –æ–ø—Ä–æ—Å")
    rpe_data = {
        "telegramId": str(player['telegramId']),
        "clubId": str(player['clubId']),
        "teamId": str(player['teamId']),
        "date": "2024-01-15",
        "surveyType": "rpe"
    }
    
    try:
        response = requests.post(
            "http://158.160.189.99:8080/send-rpe-survey",
            json=rpe_data,
            timeout=10
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            print("   ‚úÖ RPE –æ–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞ RPE –æ–ø—Ä–æ—Å–∞")
            return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_nextjs_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Next.js API (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é)"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Next.js API")
    print("=" * 50)
    
    player = get_test_player()
    if not player:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∏–≥—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return False
    
    # –¢–µ—Å—Ç —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –æ–ø—Ä–æ—Å–∞
    print(f"\nüì§ –¢–µ—Å—Ç: –£—Ç—Ä–µ–Ω–Ω–∏–π –æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ Next.js API")
    morning_data = {
        "playerId": str(player['id']),
        "teamId": str(player['teamId']),
        "date": "2024-01-15"
    }
    
    try:
        response = requests.post(
            "http://localhost:3000/api/surveys/morning",
            json=morning_data,
            timeout=10
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 401:
            print("   ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–æ–∂–∏–¥–∞–µ–º–æ)")
        elif response.status_code == 200:
            print("   ‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç RPE –æ–ø—Ä–æ—Å–∞
    print(f"\nüì§ –¢–µ—Å—Ç: RPE –æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ Next.js API")
    rpe_data = {
        "playerId": str(player['id']),
        "teamId": str(player['teamId']),
        "date": "2024-01-15"
    }
    
    try:
        response = requests.post(
            "http://localhost:3000/api/surveys/rpe",
            json=rpe_data,
            timeout=10
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 401:
            print("   ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–æ–∂–∏–¥–∞–µ–º–æ)")
        elif response.status_code == 200:
            print("   ‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return True

def test_bot_restart():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"""
    print("\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –Ω–æ–≤—ã–π endpoint
        response = requests.get("http://158.160.189.99:8080/send-rpe-survey", timeout=5)
        if response.status_code == 404:
            print("‚ùå Endpoint /send-rpe-survey –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("   –†–µ—à–µ–Ω–∏–µ: –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Telegram –±–æ—Ç–∞")
            print("   –ö–æ–º–∞–Ω–¥–∞: cd telegram-bot && python bot_direct_db.py")
            return False
        elif response.status_code == 405:
            print("‚úÖ Endpoint /send-rpe-survey –¥–æ—Å—Ç—É–ø–µ–Ω (405 - Method Not Allowed –æ–∂–∏–¥–∞–µ–º–æ)")
            return True
        else:
            print(f"‚úÖ Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    bot_ready = test_bot_restart()
    
    if not bot_ready:
        print("\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Telegram –±–æ—Ç–∞!")
        print("   –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoints –±–æ—Ç–∞
    bot_working = test_telegram_bot_endpoints()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Next.js API
    api_working = test_nextjs_api()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"\nüéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("=" * 40)
    
    if bot_working:
        print("‚úÖ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("   - Endpoint /send-morning-survey: ‚úÖ")
        print("   - Endpoint /send-rpe-survey: ‚úÖ")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å Telegram –±–æ—Ç–æ–º")
    
    if api_working:
        print("‚úÖ Next.js API –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        print("   - –¢—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é (–æ–∂–∏–¥–∞–µ–º–æ)")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å Next.js API")
    
    print(f"\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Telegram –±–æ—Ç–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)")
    print("2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Next.js —Å–µ—Ä–≤–µ—Ä")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ' –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∏–≥—Ä–æ–∫–∏ –ø–æ–ª—É—á–∞—é—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")

if __name__ == "__main__":
    main()
