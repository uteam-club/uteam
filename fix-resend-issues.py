#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import requests
import json
import sys

def check_bot_endpoints():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ endpoints –±–æ—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ endpoints –±–æ—Ç–∞")
    print("=" * 50)
    
    base_url = "http://158.160.189.99:8080"
    
    # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö endpoints
    endpoints = [
        "/send-morning-survey",
        "/send-survey-success", 
        "/send-rpe-survey",
        "/",
        "/health",
        "/status"
    ]
    
    for endpoint in endpoints:
        try:
            response = requests.get(f"{base_url}{endpoint}", timeout=5)
            print(f"‚úÖ {endpoint}: {response.status_code}")
            if response.status_code == 200:
                try:
                    data = response.json()
                    print(f"   –û—Ç–≤–µ—Ç: {json.dumps(data, indent=2)}")
                except:
                    print(f"   –û—Ç–≤–µ—Ç: {response.text[:100]}...")
        except requests.exceptions.ConnectionError:
            print(f"‚ùå {endpoint}: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è {endpoint}: {e}")

def test_real_telegram_id():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º Telegram ID –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏–∑ –±–∞–∑—ã
    import psycopg2
    import psycopg2.extras
    
    DB_CONFIG = {
        'host': 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
        'port': 6432,
        'database': 'uteam',
        'user': 'uteam_bot_reader',
        'password': 'uteambot567234!',
        'sslmode': 'require'
    }
    
    try:
        connection = psycopg2.connect(**DB_CONFIG)
        with connection.cursor(cursor_factory=psycopg2.extras.RealDictCursor) as cursor:
            # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ —Å Telegram ID
            cursor.execute("""
                SELECT p."id", p."firstName", p."lastName", p."telegramId", 
                       t."clubId", t."id" as "teamId"
                FROM "Player" p
                LEFT JOIN "Team" t ON p."teamId" = t."id"
                WHERE p."telegramId" IS NOT NULL
                LIMIT 1
            """)
            player = cursor.fetchone()
            
            if not player:
                print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ —Å Telegram ID")
                return
            
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∏–≥—Ä–æ–∫: {player['firstName']} {player['lastName']}")
            print(f"   Telegram ID: {player['telegramId']}")
            print(f"   –ö–ª—É–±: {player['clubId']}")
            print(f"   –ö–æ–º–∞–Ω–¥–∞: {player['teamId']}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
            test_data = {
                "telegramId": str(player['telegramId']),
                "clubId": str(player['clubId']),
                "teamId": str(player['teamId']),
                "date": "2024-01-15",
                "surveyType": "morning"
            }
            
            print(f"\nüì§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è...")
            try:
                response = requests.post(
                    "http://158.160.189.99:8080/send-morning-survey",
                    json=test_data,
                    timeout=10
                )
                print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {response.text}")
                
                if response.status_code == 200:
                    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
    finally:
        if 'connection' in locals():
            connection.close()

def check_bot_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏ –±–æ—Ç–∞"""
    print("\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –±–æ—Ç–∞")
    print("=" * 50)
    
    # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ —á–µ—Ä–µ–∑ API
    try:
        response = requests.get("http://158.160.189.99:8080/logs", timeout=5)
        if response.status_code == 200:
            print("‚úÖ –õ–æ–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã:")
            print(response.text)
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")

def main():
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º endpoints –±–æ—Ç–∞
    check_bot_endpoints()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    test_real_telegram_id()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
    check_bot_logs()
    
    print("\nüí° –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è:")
    print("=" * 40)
    print("1. ‚ùå Endpoint /send-rpe-survey –Ω–µ –Ω–∞–π–¥–µ–Ω")
    print("   –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤–∏—Ç—å endpoint –≤ –±–æ—Ç–∞")
    print()
    print("2. ‚ùå –û—à–∏–±–∫–∞ 'chat not found' –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ ID")
    print("   –†–µ—à–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ Telegram ID")
    print()
    print("3. ‚ùå Next.js API —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")
    print("   –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print()
    print("4. üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    print("   - –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Å–µ endpoints —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã")
    print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞ –Ω–∞ –æ—à–∏–±–∫–∏")

if __name__ == "__main__":
    main()
