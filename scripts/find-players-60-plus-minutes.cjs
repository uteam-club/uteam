const { Pool } = require('pg');
const fs = require('fs');

const pool = new Pool({
  host: 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
  port: 6432,
  database: 'uteam',
  user: 'uteam-admin',
  password: 'Mell567234!',
  ssl: {
    rejectUnauthorized: false,
    ca: fs.readFileSync('./yandex_root.crt').toString()
  }
});

async function findPlayers60PlusMinutes() {
  try {
    console.log('üîç –ü–æ–∏—Å–∫ –∏–≥—Ä–æ–∫–æ–≤ FC Alashkert —Å 60+ –º–∏–Ω—É—Ç–∞–º–∏ –∏–≥—Ä—ã...\n');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ GPS –æ—Ç—á–µ—Ç—ã FC Alashkert
    const alashkertReportsQuery = `
      SELECT 
        gr.id,
        gr.name,
        gr."eventId",
        gr."eventType",
        gr."processedData"
      FROM "GpsReport" gr
      JOIN "Club" c ON gr."clubId" = c.id
      WHERE c.name = 'FC Alashkert' AND gr."eventType" = 'MATCH'
      ORDER BY gr."createdAt" DESC;
    `;

    const alashkertReportsResult = await pool.query(alashkertReportsQuery);
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤ FC Alashkert: ${alashkertReportsResult.rows.length}`);

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    const playerStats = {};

    alashkertReportsResult.rows.forEach((report, reportIndex) => {
      console.log(`\nüìä –û–¢–ß–ï–¢ ${reportIndex + 1}: ${report.name}`);
      
      if (report.processedData && report.processedData.length > 0) {
        report.processedData.forEach((player) => {
          const playerName = player.name || player.Player || 'Unknown';
          const timeValue = player.Time || player.time || '00:00:00';
          
          // –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è
          const timeParts = timeValue.split(':');
          const hours = parseInt(timeParts[0]) || 0;
          const minutes = parseInt(timeParts[1]) || 0;
          const totalMinutes = hours * 60 + minutes;

          if (!playerStats[playerName]) {
            playerStats[playerName] = {
              name: playerName,
              playerId: player.playerId,
              matches: [],
              totalMinutes: 0,
              matches60Plus: 0
            };
          }

          playerStats[playerName].matches.push({
            reportName: report.name,
            time: timeValue,
            minutes: totalMinutes,
            is60Plus: totalMinutes >= 60
          });

          playerStats[playerName].totalMinutes += totalMinutes;
          if (totalMinutes >= 60) {
            playerStats[playerName].matches60Plus++;
          }
        });
      }
    });

    // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∏–≥—Ä–æ–∫–∞–º
    console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ì–†–û–ö–û–í FC ALASHKERT:');
    
    const sortedPlayers = Object.values(playerStats).sort((a, b) => b.matches60Plus - a.matches60Plus);
    
    sortedPlayers.forEach((player, index) => {
      console.log(`\n${index + 1}. ${player.name} (ID: ${player.playerId})`);
      console.log(`   üìä –í—Å–µ–≥–æ –º–∞—Ç—á–µ–π: ${player.matches.length}`);
      console.log(`   üìä –ú–∞—Ç—á–µ–π —Å 60+ –º–∏–Ω—É—Ç–∞–º–∏: ${player.matches60Plus}`);
      console.log(`   üìä –û–±—â–µ–µ –≤—Ä–µ–º—è: ${player.totalMinutes} –º–∏–Ω—É—Ç`);
      console.log(`   üìä –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: ${(player.totalMinutes / player.matches.length).toFixed(1)} –º–∏–Ω—É—Ç`);
      
      if (player.matches60Plus > 0) {
        console.log(`   ‚úÖ –ò–ì–†–û–ö –ü–û–î–•–û–î–ò–¢ –î–õ–Ø –ò–ì–†–û–í–û–ô –ú–û–î–ï–õ–ò!`);
        console.log(`   üìã –ú–∞—Ç—á–∏ —Å 60+ –º–∏–Ω—É—Ç–∞–º–∏:`);
        player.matches.filter(m => m.is60Plus).forEach(match => {
          console.log(`      - ${match.reportName}: ${match.time} (${match.minutes} –º–∏–Ω)`);
        });
      } else {
        console.log(`   ‚ùå –ò–≥—Ä–æ–∫ –ù–ï –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∏–≥—Ä–æ–≤–æ–π –º–æ–¥–µ–ª–∏ (–Ω–µ—Ç –º–∞—Ç—á–µ–π —Å 60+ –º–∏–Ω—É—Ç–∞–º–∏)`);
        console.log(`   üìã –í—Å–µ –º–∞—Ç—á–∏:`);
        player.matches.forEach(match => {
          console.log(`      - ${match.reportName}: ${match.time} (${match.minutes} –º–∏–Ω)`);
        });
      }
    });

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalPlayers = sortedPlayers.length;
    const playersWith60Plus = sortedPlayers.filter(p => p.matches60Plus > 0).length;
    
    console.log('\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log(`   üìä –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: ${totalPlayers}`);
    console.log(`   üìä –ò–≥—Ä–æ–∫–æ–≤ —Å 60+ –º–∏–Ω—É—Ç–∞–º–∏: ${playersWith60Plus}`);
    console.log(`   üìä –ü—Ä–æ—Ü–µ–Ω—Ç –∏–≥—Ä–æ–∫–æ–≤ —Å 60+ –º–∏–Ω—É—Ç–∞–º–∏: ${((playersWith60Plus / totalPlayers) * 100).toFixed(1)}%`);

    if (playersWith60Plus === 0) {
      console.log('\n‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê!');
      console.log('–£ FC Alashkert –ù–ï–¢ –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–∞—é—Ç 60+ –º–∏–Ω—É—Ç –≤ –º–∞—Ç—á–∞—Ö!');
      console.log('–≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç, –ø–æ—á–µ–º—É –∏–≥—Ä–æ–≤–∞—è –º–æ–¥–µ–ª—å –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è.');
    } else {
      console.log('\n‚úÖ –ò–≥—Ä–æ–∫–∏ —Å 60+ –º–∏–Ω—É—Ç–∞–º–∏ –Ω–∞–π–¥–µ–Ω—ã!');
      console.log('–ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ –∫–æ–¥–∞.');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–≥—Ä–æ–∫–æ–≤:', error);
  } finally {
    await pool.end();
  }
}

findPlayers60PlusMinutes(); 