const { Pool } = require('pg');
const fs = require('fs');

const pool = new Pool({
  host: 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
  port: 6432,
  database: 'uteam',
  user: 'uteam-admin',
  password: 'Mell567234!',
  ssl: {
    rejectUnauthorized: false,
    ca: fs.readFileSync('./yandex_root.crt').toString()
  }
});

async function cleanupOrphanedReports() {
  try {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Ä–æ—Ç–Ω—ã—Ö GPS –æ—Ç—á–µ—Ç–æ–≤...\n');

    // 1. –ù–∞—Ö–æ–¥–∏–º —Å–∏—Ä–æ—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –º–∞—Ç—á–µ–π
    const orphanedMatchReportsQuery = `
      SELECT 
        gr.id,
        gr.name,
        gr."eventId",
        gr."eventType",
        gr."clubId",
        gr."createdAt",
        c.name as club_name
      FROM "GpsReport" gr
      LEFT JOIN "Match" m ON gr."eventId" = m.id
      JOIN "Club" c ON gr."clubId" = c.id
      WHERE gr."eventType" = 'MATCH' 
        AND m.id IS NULL
      ORDER BY gr."createdAt" DESC;
    `;

    const orphanedMatchReportsResult = await pool.query(orphanedMatchReportsQuery);
    const orphanedMatchReports = orphanedMatchReportsResult.rows;

    // 2. –ù–∞—Ö–æ–¥–∏–º —Å–∏—Ä–æ—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    const orphanedTrainingReportsQuery = `
      SELECT 
        gr.id,
        gr.name,
        gr."eventId",
        gr."eventType",
        gr."clubId",
        gr."createdAt",
        c.name as club_name
      FROM "GpsReport" gr
      LEFT JOIN "Training" t ON gr."eventId" = t.id
      JOIN "Club" c ON gr."clubId" = c.id
      WHERE gr."eventType" = 'TRAINING' 
        AND t.id IS NULL
      ORDER BY gr."createdAt" DESC;
    `;

    const orphanedTrainingReportsResult = await pool.query(orphanedTrainingReportsQuery);
    const orphanedTrainingReports = orphanedTrainingReportsResult.rows;

    const totalOrphaned = orphanedMatchReports.length + orphanedTrainingReports.length;

    if (totalOrphaned === 0) {
      console.log('‚úÖ –°–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —á–∏—Å—Ç–∞—è!');
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ${totalOrphaned}`);
    console.log(`   –°–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –º–∞—Ç—á–µ–π: ${orphanedMatchReports.length}`);
    console.log(`   –°–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: ${orphanedTrainingReports.length}`);

    // 3. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã
    if (orphanedMatchReports.length > 0) {
      console.log('\nüóëÔ∏è  –°–ò–†–û–¢–°–ö–ò–ï –û–¢–ß–ï–¢–´ –ú–ê–¢–ß–ï–ô –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø:');
      orphanedMatchReports.forEach((row, index) => {
        console.log(`\n${index + 1}. ${row.name}`);
        console.log(`   ID: ${row.id}`);
        console.log(`   Event ID: ${row.eventId}`);
        console.log(`   Club: ${row.club_name}`);
        console.log(`   Created: ${new Date(row.createdAt).toLocaleString()}`);
      });
    }

    if (orphanedTrainingReports.length > 0) {
      console.log('\nüóëÔ∏è  –°–ò–†–û–¢–°–ö–ò–ï –û–¢–ß–ï–¢–´ –¢–†–ï–ù–ò–†–û–í–û–ö –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø:');
      orphanedTrainingReports.forEach((row, index) => {
        console.log(`\n${index + 1}. ${row.name}`);
        console.log(`   ID: ${row.id}`);
        console.log(`   Event ID: ${row.eventId}`);
        console.log(`   Club: ${row.club_name}`);
        console.log(`   Created: ${new Date(row.createdAt).toLocaleString()}`);
      });
    }

    // 4. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    console.log(`\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ ${totalOrphaned} —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤.`);
    console.log('   –≠—Ç–∏ –æ—Ç—á–µ—Ç—ã —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ç—á–∏/—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.');
    console.log('   –£–¥–∞–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è.');
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    // –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    console.log('\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ...');

    // 5. –£–¥–∞–ª—è–µ–º —Å–∏—Ä–æ—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –º–∞—Ç—á–µ–π
    if (orphanedMatchReports.length > 0) {
      const matchReportIds = orphanedMatchReports.map(r => r.id);
      console.log(`\nüóëÔ∏è  –£–¥–∞–ª—è–µ–º ${orphanedMatchReports.length} —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –º–∞—Ç—á–µ–π...`);
      
      const deleteMatchReportsQuery = `
        DELETE FROM "GpsReport" 
        WHERE id = ANY($1) AND "eventType" = 'MATCH'
      `;
      
      const deleteMatchResult = await pool.query(deleteMatchReportsQuery, [matchReportIds]);
      console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤ –º–∞—Ç—á–µ–π: ${deleteMatchResult.rowCount}`);
    }

    // 6. –£–¥–∞–ª—è–µ–º —Å–∏—Ä–æ—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    if (orphanedTrainingReports.length > 0) {
      const trainingReportIds = orphanedTrainingReports.map(r => r.id);
      console.log(`\nüóëÔ∏è  –£–¥–∞–ª—è–µ–º ${orphanedTrainingReports.length} —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫...`);
      
      const deleteTrainingReportsQuery = `
        DELETE FROM "GpsReport" 
        WHERE id = ANY($1) AND "eventType" = 'TRAINING'
      `;
      
      const deleteTrainingResult = await pool.query(deleteTrainingReportsQuery, [trainingReportIds]);
      console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: ${deleteTrainingResult.rowCount}`);
    }

    // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüîç –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ó–£–õ–¨–¢–ê–¢:');
    
    const finalOrphanedMatchResult = await pool.query(orphanedMatchReportsQuery);
    const finalOrphanedTrainingResult = await pool.query(orphanedTrainingReportsQuery);
    const finalTotalOrphaned = finalOrphanedMatchResult.rows.length + finalOrphanedTrainingResult.rows.length;

    if (finalTotalOrphaned === 0) {
      console.log('‚úÖ –í—Å–µ —Å–∏—Ä–æ—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!');
      console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–µ–ø–µ—Ä—å —á–∏—Å—Ç–∞—è.');
    } else {
      console.log(`‚ö†Ô∏è  –û—Å—Ç–∞–ª–æ—Å—å —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤: ${finalTotalOrphaned}`);
    }

    // 8. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalReportsQuery = 'SELECT COUNT(*) as count FROM "GpsReport"';
    const totalReportsResult = await pool.query(totalReportsQuery);
    const totalReports = parseInt(totalReportsResult.rows[0].count);
    
    console.log(`\nüìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`);
    console.log(`   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ GPS –æ—Ç—á–µ—Ç–æ–≤: ${totalReports}`);
    console.log(`   –£–¥–∞–ª–µ–Ω–æ —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤: ${totalOrphaned}`);
    console.log(`   –û—Å—Ç–∞–ª–æ—Å—å —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤: ${finalTotalOrphaned}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤:', error);
  } finally {
    await pool.end();
  }
}

cleanupOrphanedReports(); 