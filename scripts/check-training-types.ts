import 'dotenv/config';
import { db } from '../src/lib/db';
import { training } from '../src/db/schema/training';
import { sql } from 'drizzle-orm';

async function checkTrainingTypes() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å –∏—Ö —Ç–∏–ø–∞–º–∏
    const trainings = await db
      .select({
        id: training.id,
        title: training.title,
        type: training.type,
        createdAt: training.createdAt
      })
      .from(training)
      .orderBy(training.createdAt);
    
    console.log(`üìä –í—Å–µ–≥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: ${trainings.length}`);
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º
    const typeGroups = trainings.reduce((acc, t) => {
      acc[t.type] = (acc[t.type] || 0) + 1;
      return acc;
    }, {} as Record<string, number>);
    
    console.log('üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º:');
    Object.entries(typeGroups).forEach(([type, count]) => {
      console.log(`  ${type}: ${count} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫`);
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
    console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:');
    const uniqueTypes = [...new Set(trainings.map(t => t.type))];
    uniqueTypes.forEach(type => {
      const example = trainings.find(t => t.type === type);
      if (example) {
        console.log(`  ${type}: "${example.title}" (${example.createdAt})`);
      }
    });
    
    // –ò—â–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å GYM –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    const possibleGymTrainings = trainings.filter(t => 
      t.title.toLowerCase().includes('gym') || 
      t.title.toLowerCase().includes('—Ç—Ä–µ–Ω–∞–∂–µ—Ä') ||
      t.title.toLowerCase().includes('–∑–∞–ª')
    );
    
    if (possibleGymTrainings.length > 0) {
      console.log('\nüèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å GYM –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é:');
      possibleGymTrainings.forEach(t => {
        console.log(`  "${t.title}" - —Ç–∏–ø: ${t.type}`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∏–ø–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:', error);
  } finally {
    process.exit(0);
  }
}

checkTrainingTypes();
