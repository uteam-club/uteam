const { Pool } = require('pg');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const pool = new Pool({
  host: 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
  port: 6432,
  database: 'uteam',
  user: 'uteam-admin',
  password: 'Mell567234!',
  ssl: {
    rejectUnauthorized: false
  }
});

async function checkExerciseData() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –≤ –±–∞–∑–µ...\n');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    console.log('üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:');
    const categoriesResult = await pool.query(
      'SELECT id, name, "clubId" FROM "ExerciseCategory" ORDER BY name'
    );
    
    if (categoriesResult.rows.length === 0) {
      console.log('  ‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    } else {
      categoriesResult.rows.forEach(cat => {
        console.log(`  ‚úÖ ${cat.name} (ID: ${cat.id}, Club: ${cat.clubId})`);
      });
    }
    console.log('');

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–≥–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    console.log('üè∑Ô∏è –¢–µ–≥–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:');
    const tagsResult = await pool.query(
      'SELECT id, name, "clubId", "exerciseCategoryId" FROM "ExerciseTag" ORDER BY name'
    );
    
    if (tagsResult.rows.length === 0) {
      console.log('  ‚ùå –¢–µ–≥–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    } else {
      tagsResult.rows.forEach(tag => {
        console.log(`  ‚úÖ ${tag.name} (ID: ${tag.id}, Club: ${tag.clubId}, Category: ${tag.exerciseCategoryId})`);
      });
    }
    console.log('');

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑—å —Ç–µ–≥–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    console.log('üîó –°–≤—è–∑—å —Ç–µ–≥–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏:');
    const tagsWithCategoriesResult = await pool.query(`
      SELECT 
        t.id as tag_id,
        t.name as tag_name,
        c.id as category_id,
        c.name as category_name,
        t."clubId"
      FROM "ExerciseTag" t
      LEFT JOIN "ExerciseCategory" c ON t."exerciseCategoryId" = c.id
      ORDER BY c.name, t.name
    `);
    
    if (tagsWithCategoriesResult.rows.length === 0) {
      console.log('  ‚ùå –°–≤—è–∑–∏ —Ç–µ–≥–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    } else {
      const groupedByCategory = {};
      tagsWithCategoriesResult.rows.forEach(row => {
        const categoryName = row.category_name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
        if (!groupedByCategory[categoryName]) {
          groupedByCategory[categoryName] = [];
        }
        groupedByCategory[categoryName].push(row.tag_name);
      });
      
      Object.entries(groupedByCategory).forEach(([categoryName, tags]) => {
        console.log(`  üìÇ ${categoryName}:`);
        tags.forEach(tagName => {
          console.log(`    - ${tagName}`);
        });
      });
    }
    console.log('');

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—É–±—ã
    console.log('üè¢ –ö–ª—É–±—ã:');
    const clubsResult = await pool.query(
      'SELECT id, name, subdomain FROM "Club" ORDER BY name'
    );
    
    if (clubsResult.rows.length === 0) {
      console.log('  ‚ùå –ö–ª—É–±—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    } else {
      clubsResult.rows.forEach(club => {
        console.log(`  ‚úÖ ${club.name} (ID: ${club.id}, Subdomain: ${club.subdomain})`);
      });
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await pool.end();
  }
}

checkExerciseData();

