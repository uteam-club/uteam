const { Pool } = require('pg');

const pool = new Pool({
  connectionString: process.env.DATABASE_URL || 'postgresql://uteam-admin:Mell567234!@rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net:6432/uteam?sslmode=verify-full&sslrootcert=./yandex_root.crt'
});

async function testConnection() {
  try {
    console.log('üîå –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...');
    const client = await pool.connect();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã GPS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
    const result = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_name LIKE 'Gps%Permission%'
      ORDER BY table_name;
    `);
    
    console.log('üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã GPS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:');
    result.rows.forEach(row => {
      console.log(`  ‚úÖ ${row.table_name}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    const countResult = await client.query('SELECT COUNT(*) FROM "GpsPermission"');
    console.log(`\nüìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ GPS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: ${countResult.rows[0].count}`);
    
    client.release();
    await pool.end();
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
    process.exit(1);
  }
}

testConnection();
