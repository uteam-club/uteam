// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –∏–≥—Ä–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π
const fetch = require('node-fetch');

const BASE_URL = 'http://fdcvista.localhost:3000';
const PLAYER_ID = '979f330a-1605-4fc0-bdab-9f6538d18621';

async function testGameModelAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∏–≥—Ä–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π...\n');

  try {
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–π –º–æ–¥–µ–ª–∏ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401 –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–π –º–æ–¥–µ–ª–∏...');
    const gameModelResponse = await fetch(`${BASE_URL}/api/players/${PLAYER_ID}/game-model`);
    
    console.log(`–°—Ç–∞—Ç—É—Å: ${gameModelResponse.status}`);
    
    if (gameModelResponse.status === 401) {
      console.log('‚úÖ –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    } else if (gameModelResponse.status === 500) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ - –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å');
      const errorText = await gameModelResponse.text();
      console.log('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', errorText);
    } else {
      console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å:', gameModelResponse.status);
    }

    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    const settingsResponse = await fetch(`${BASE_URL}/api/players/${PLAYER_ID}/game-model/settings`);
    
    console.log(`–°—Ç–∞—Ç—É—Å: ${settingsResponse.status}`);
    
    if (settingsResponse.status === 401) {
      console.log('‚úÖ –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    } else if (settingsResponse.status === 500) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ - –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å');
      const errorText = await settingsResponse.text();
      console.log('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', errorText);
    } else {
      console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å:', settingsResponse.status);
    }

    console.log('\nüéâ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testGameModelAPI();

