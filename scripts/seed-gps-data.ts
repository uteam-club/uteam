import { seedGpsCanonicalMetrics } from './seed-gps-canonical-metrics';
import { seedGpsPermissions } from './seed-gps-permissions';

async function seedAllGpsData() {
  console.log('üå± –ù–∞—á–∞–ª–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö GPS –¥–∞–Ω–Ω—ã—Ö...');

  try {
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –∏ –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è
    await seedGpsCanonicalMetrics();
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º GPS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    await seedGpsPermissions();
    
    console.log('üéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö GPS –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ GPS –¥–∞–Ω–Ω—ã—Ö:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  seedAllGpsData()
    .then(() => {
      console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error);
      process.exit(1);
    });
}

export { seedAllGpsData };
