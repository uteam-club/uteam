const fs = require('fs');

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–æ–≤...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –ø–æ–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞–ø–ø–∏–Ω–≥–æ–≤
function testExistingMappingLogic() {
  console.log('=== –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ü–û–ò–°–ö–ê –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –ú–ê–ü–ü–ò–ù–ì–û–í ===\n');
  
  const servicePath = 'src/services/playerMapping.service.ts';
  const serviceContent = fs.readFileSync(servicePath, 'utf8');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–∏—Å–∫ –≤ findExistingMapping –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç gpsSystem
  const findExistingMappingFunction = serviceContent.match(/static async findExistingMapping[\s\S]*?return existing\[0\] \|\| null;/);
  const hasGpsSystemFilterInFind = findExistingMappingFunction && findExistingMappingFunction[0].includes('eq(playerMapping.gpsSystem, gpsSystem)');
  const hasCorrectFilter = serviceContent.includes('eq(playerMapping.reportName, reportName)') && 
                          serviceContent.includes('eq(playerMapping.teamId, teamId)') &&
                          serviceContent.includes('eq(playerMapping.clubId, clubId)');
  
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ findExistingMapping...');
  if (!hasGpsSystemFilterInFind && hasCorrectFilter) {
    console.log('‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: –ø–æ–∏—Å–∫ –ø–æ reportName, teamId, clubId (–±–µ–∑ gpsSystem)');
  } else if (hasGpsSystemFilterInFind) {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ø–æ–∏—Å–∫ –≤—Å–µ –µ—â–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç gpsSystem');
  } else {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–¥–∞—á—É gpsSystem –≤ autoMatchPlayer
  const hasGpsSystemParam = serviceContent.includes('gpsSystem?: string');
  const hasGpsSystemUsage = serviceContent.includes('gpsSystem || \'unknown\'');
  
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ gpsSystem –≤ autoMatchPlayer...');
  if (hasGpsSystemParam && hasGpsSystemUsage) {
    console.log('‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä gpsSystem –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è');
  } else {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ø–∞—Ä–∞–º–µ—Ç—Ä gpsSystem –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è');
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoint
function testApiEndpoint() {
  console.log('\n=== –¢–ï–°–¢ API ENDPOINT ===\n');
  
  const apiPath = 'src/app/api/player-mappings/auto-match/route.ts';
  const apiContent = fs.readFileSync(apiPath, 'utf8');
  
  const hasGpsSystemInBody = apiContent.includes('gpsSystem');
  const hasGpsSystemInCall = apiContent.includes('autoMatchPlayer(reportName, teamId, token.clubId, gpsSystem)');
  
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint...');
  if (hasGpsSystemInBody && hasGpsSystemInCall) {
    console.log('‚úÖ API –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–¥–∞–µ—Ç gpsSystem');
  } else {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: API –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç gpsSystem');
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function testModalComponent() {
  console.log('\n=== –¢–ï–°–¢ –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê ===\n');
  
  const modalPath = 'src/components/gps/PlayerMappingModal.tsx';
  const modalContent = fs.readFileSync(modalPath, 'utf8');
  
  const hasGpsSystemInProps = modalContent.includes('gpsSystem: string');
  const hasGpsSystemInRequest = modalContent.includes('gpsSystem');
  
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...');
  if (hasGpsSystemInProps && hasGpsSystemInRequest) {
    console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–¥–∞–µ—Ç gpsSystem');
  } else {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç gpsSystem');
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ firstName/lastName
function testNameFix() {
  console.log('\n=== –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ò–ú–ï–ù ===\n');
  
  const servicePath = 'src/services/playerMapping.service.ts';
  const serviceContent = fs.readFileSync(servicePath, 'utf8');
  
  const hasFirstNameUsage = serviceContent.includes('player.firstName');
  const hasLastNameUsage = serviceContent.includes('player.lastName');
  const hasFullNameConstruction = serviceContent.includes('`${player.firstName || \'\'} ${player.lastName || \'\'}`');
  
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω...');
  if (hasFirstNameUsage && hasLastNameUsage && hasFullNameConstruction) {
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è firstName + lastName');
  } else {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ');
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –æ—Ç—á–µ—Ç–æ–≤
function testReportUploadIntegration() {
  console.log('\n=== –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° –ó–ê–ì–†–£–ó–ö–û–ô ===\n');
  
  const uploadPath = 'src/components/gps/UploadGpsReportModal.tsx';
  const uploadContent = fs.readFileSync(uploadPath, 'utf8');
  
  const hasPlayerMappingModal = uploadContent.includes('PlayerMappingModal');
  const hasShowPlayerMapping = uploadContent.includes('showPlayerMapping');
  const hasPlayerNames = uploadContent.includes('playerNames');
  
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π...');
  if (hasPlayerMappingModal && hasShowPlayerMapping && hasPlayerNames) {
    console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –æ—Ç—á–µ—Ç–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
  } else {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –æ—Ç—á–µ—Ç–æ–≤ –Ω–µ–ø–æ–ª–Ω–∞—è');
  }
}

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
testExistingMappingLogic();
testApiEndpoint();
testModalComponent();
testNameFix();
testReportUploadIntegration();

console.log('\n=== –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´ –ü–û–í–¢–û–†–ù–û–ô –ó–ê–ì–†–£–ó–ö–ò ===\n');

console.log('üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã, –ø–æ—á–µ–º—É –º–∞–ø–ø–∏–Ω–≥–∏ –Ω–µ –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—Ç—Å—è –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ:');
console.log('1. ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≤ findExistingMapping (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)');
console.log('2. ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–µ—Ä–µ–¥–∞—á–∏ gpsSystem (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)');
console.log('3. ‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ player.name –≤–º–µ—Å—Ç–æ firstName/lastName (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)');
console.log('4. ‚úÖ –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞–ø–ø–∏–Ω–≥–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
console.log('5. ‚úÖ API endpoint –ø–µ—Ä–µ–¥–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
console.log('6. ‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ');

console.log('\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
console.log('1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ GPS-–æ—Ç—á–µ—Ç —Å –∏–º–µ–Ω–∞–º–∏ –∏–≥—Ä–æ–∫–æ–≤');
console.log('2. –°–æ–∑–¥–∞–π—Ç–µ –º–∞–ø–ø–∏–Ω–≥–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ');
console.log('3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–æ—Ç –∂–µ –æ—Ç—á–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ');
console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏');
console.log('5. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏');

console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!'); 