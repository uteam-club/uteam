const { Pool } = require('pg');

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false
  }
});

async function fixAdminPermissions() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è—é —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ä–æ–ª–∏ ADMIN...\n');
    
    // –ü–æ–ª—É—á–∞–µ–º ID —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è gps.admin.permissions
    const adminPermResult = await pool.query(`
      SELECT id, code, name 
      FROM "GpsPermission" 
      WHERE code = 'gps.admin.permissions'
    `);
    
    if (adminPermResult.rows.length === 0) {
      console.log('‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ gps.admin.permissions –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      return;
    }
    
    const adminPerm = adminPermResult.rows[0];
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: ${adminPerm.code} - ${adminPerm.name} (ID: ${adminPerm.id})`);
    
    // –£–¥–∞–ª—è–µ–º —ç—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ä–æ–ª–∏ ADMIN
    const deleteResult = await pool.query(`
      DELETE FROM "GpsRolePermission" 
      WHERE role = 'ADMIN' AND "permissionId" = $1
    `, [adminPerm.id]);
    
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${deleteResult.rowCount}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const checkResult = await pool.query(`
      SELECT 
        rp."permissionId",
        rp.allowed,
        p.code,
        p.name
      FROM "GpsRolePermission" rp
      JOIN "GpsPermission" p ON rp."permissionId" = p.id
      WHERE rp.role = 'ADMIN' AND p.code = 'gps.admin.permissions'
    `);
    
    if (checkResult.rows.length === 0) {
      console.log('‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ gps.admin.permissions —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –¥–ª—è —Ä–æ–ª–∏ ADMIN');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞: —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —Ä–æ–ª–∏ ADMIN');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ä–æ–ª–∏ ADMIN
    console.log('\nüìã –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ä–æ–ª–∏ ADMIN:');
    const finalResult = await pool.query(`
      SELECT 
        p.code,
        p.name,
        p.category,
        rp.allowed
      FROM "GpsRolePermission" rp
      JOIN "GpsPermission" p ON rp."permissionId" = p.id
      WHERE rp.role = 'ADMIN'
      ORDER BY p.category, p.name
    `);
    
    const byCategory = {};
    finalResult.rows.forEach(rp => {
      if (!byCategory[rp.category]) {
        byCategory[rp.category] = [];
      }
      byCategory[rp.category].push(rp);
    });
    
    Object.keys(byCategory).forEach(category => {
      console.log(`  üìÅ ${category}:`);
      byCategory[category].forEach(rp => {
        const status = rp.allowed ? '‚úÖ' : '‚ùå';
        console.log(`    ${status} ${rp.code} - ${rp.name}`);
      });
    });
    
    console.log(`\nüìä –í—Å–µ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π —É —Ä–æ–ª–∏ ADMIN: ${finalResult.rows.length}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π —Ä–æ–ª–∏ ADMIN:', error.message);
  } finally {
    await pool.end();
  }
}

fixAdminPermissions();
