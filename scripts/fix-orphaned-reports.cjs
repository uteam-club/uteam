const { Pool } = require('pg');
const fs = require('fs');

const pool = new Pool({
  host: 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
  port: 6432,
  database: 'uteam',
  user: 'uteam-admin',
  password: 'Mell567234!',
  ssl: {
    rejectUnauthorized: false,
    ca: fs.readFileSync('./yandex_root.crt').toString()
  }
});

async function fixOrphanedReports() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–∏—Ä–æ—Ç—Å–∫–∏–µ GPS –æ—Ç—á–µ—Ç—ã...\n');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ GPS –æ—Ç—á–µ—Ç—ã FDC Vista
    const orphanedReportsQuery = `
      SELECT 
        gr.id,
        gr.name,
        gr."eventId",
        gr."eventType",
        gr."teamId",
        gr."clubId",
        gr."processedData",
        gr."createdAt"
      FROM "GpsReport" gr
      JOIN "Club" c ON gr."clubId" = c.id
      WHERE c.name = 'FDC Vista'
      ORDER BY gr."createdAt" DESC;
    `;

    const orphanedReportsResult = await pool.query(orphanedReportsQuery);
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ GPS –æ—Ç—á–µ—Ç–æ–≤ FDC Vista: ${orphanedReportsResult.rows.length}`);

    // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–∞—Ç—á FDC Vista
    const existingMatchQuery = `
      SELECT 
        m.id,
        m."date",
        m."opponentName",
        m."teamGoals",
        m."opponentGoals"
      FROM "Match" m
      JOIN "Club" c ON m."clubId" = c.id
      WHERE c.name = 'FDC Vista'
      ORDER BY m."date" DESC
      LIMIT 1;
    `;

    const existingMatchResult = await pool.query(existingMatchQuery);
    
    if (existingMatchResult.rows.length === 0) {
      console.log('‚ùå –ù–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞—Ç—á–µ–π FDC Vista');
      return;
    }

    const existingMatch = existingMatchResult.rows[0];
    console.log(`üìä –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–∞—Ç—á: ${new Date(existingMatch.date).toLocaleDateString()} vs ${existingMatch.opponentName} (${existingMatch.teamGoals}:${existingMatch.opponentGoals})`);
    console.log(`   Match ID: ${existingMatch.id}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –æ—Ç—á–µ—Ç
    for (const report of orphanedReportsResult.rows) {
      console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á–µ—Ç: ${report.name}`);
      console.log(`   Report ID: ${report.id}`);
      console.log(`   Event ID: ${report.eventId}`);
      console.log(`   Event Type: ${report.eventType}`);
      console.log(`   Data Length: ${report.processedData ? report.processedData.length : 0}`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ–±—ã—Ç–∏–µ
      if (report.eventType === 'MATCH') {
        const matchExistsQuery = `
          SELECT id, "date", "opponentName"
          FROM "Match"
          WHERE id = $1
        `;
        
        const matchExistsResult = await pool.query(matchExistsQuery, [report.eventId]);
        
        if (matchExistsResult.rows.length === 0) {
          console.log(`   ‚ùå –°–≤—è–∑–∞–Ω–Ω—ã–π –º–∞—Ç—á –ù–ï –ù–ê–ô–î–ï–ù - —ç—Ç–æ —Å–∏—Ä–æ—Ç—Å–∫–∏–π –æ—Ç—á–µ—Ç`);
          
          // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
          console.log(`   üîß –í–∞—Ä–∏–∞–Ω—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:`);
          console.log(`      1. –£–¥–∞–ª–∏—Ç—å –æ—Ç—á–µ—Ç (–ø–æ—Ç–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ)`);
          console.log(`      2. –°–≤—è–∑–∞—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –º–∞—Ç—á–µ–º ${existingMatch.id}`);
          
          // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–≤—è–∂–µ–º —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –º–∞—Ç—á–µ–º
          const updateQuery = `
            UPDATE "GpsReport"
            SET "eventId" = $1
            WHERE id = $2
          `;
          
          await pool.query(updateQuery, [existingMatch.id, report.id]);
          console.log(`   ‚úÖ –û—Ç—á–µ—Ç —Å–≤—è–∑–∞–Ω —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –º–∞—Ç—á–µ–º`);
          
        } else {
          const match = matchExistsResult.rows[0];
          console.log(`   ‚úÖ –°–≤—è–∑–∞–Ω–Ω—ã–π –º–∞—Ç—á –Ω–∞–π–¥–µ–Ω: ${new Date(match.date).toLocaleDateString()} vs ${match.opponentName}`);
        }
      } else if (report.eventType === 'TRAINING') {
        const trainingExistsQuery = `
          SELECT id, "date", name
          FROM "Training"
          WHERE id = $1
        `;
        
        const trainingExistsResult = await pool.query(trainingExistsQuery, [report.eventId]);
        
        if (trainingExistsResult.rows.length === 0) {
          console.log(`   ‚ùå –°–≤—è–∑–∞–Ω–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ù–ï –ù–ê–ô–î–ï–ù–ê - —ç—Ç–æ —Å–∏—Ä–æ—Ç—Å–∫–∏–π –æ—Ç—á–µ—Ç`);
          console.log(`   üîß –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–µ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏`);
        } else {
          const training = trainingExistsResult.rows[0];
          console.log(`   ‚úÖ –°–≤—è–∑–∞–Ω–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: ${new Date(training.date).toLocaleDateString()} - ${training.name}`);
        }
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
    const finalCheckQuery = `
      SELECT 
        m.id as match_id,
        m."date",
        m."opponentName",
        gr.id as report_id,
        gr.name as report_name
      FROM "Match" m
      LEFT JOIN "GpsReport" gr ON gr."eventId" = m.id 
        AND gr."eventType" = 'MATCH' 
        AND gr."clubId" = m."clubId"
      JOIN "Club" c ON m."clubId" = c.id
      WHERE c.name = 'FDC Vista'
      ORDER BY m."date" DESC;
    `;

    const finalCheckResult = await pool.query(finalCheckQuery);
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${finalCheckResult.rows.length} –º–∞—Ç—á–µ–π`);
    
    finalCheckResult.rows.forEach((row, index) => {
      console.log(`\n${index + 1}. –ú–∞—Ç—á: ${new Date(row.date).toLocaleDateString()} vs ${row.opponentName}`);
      console.log(`   Match ID: ${row.match_id}`);
      if (row.report_id) {
        console.log(`   ‚úÖ Has GPS Report: ${row.report_name} (ID: ${row.report_id})`);
      } else {
        console.log(`   ‚ùå No GPS Report`);
      }
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏:', error);
  } finally {
    await pool.end();
  }
}

fixOrphanedReports(); 