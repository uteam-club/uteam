const { Client } = require('pg');
const fs = require('fs');
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const connectionString = "postgresql://uteam-admin:Mell567234!@rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net:6432/uteam?sslmode=verify-full&sslrootcert=./yandex_root.crt";

// SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –∏–≥—Ä–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π
const migrationSQL = `
-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –∏–≥—Ä–æ–∫–æ–≤
CREATE TABLE IF NOT EXISTS "PlayerGameModel" (
    "id" uuid PRIMARY KEY DEFAULT gen_random_uuid(),
    "playerId" uuid NOT NULL,
    "clubId" uuid NOT NULL,
    "calculatedAt" timestamp with time zone DEFAULT now() NOT NULL,
    "matchesCount" integer NOT NULL,
    "totalMinutes" integer NOT NULL,
    "metrics" jsonb NOT NULL,
    "matchIds" jsonb NOT NULL,
    "version" integer DEFAULT 1 NOT NULL,
    "createdAt" timestamp with time zone DEFAULT now() NOT NULL,
    "updatedAt" timestamp with time zone DEFAULT now() NOT NULL
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π
CREATE TABLE IF NOT EXISTS "PlayerGameModelSettings" (
    "id" uuid PRIMARY KEY DEFAULT gen_random_uuid(),
    "playerId" uuid NOT NULL,
    "clubId" uuid NOT NULL,
    "selectedMetrics" jsonb NOT NULL,
    "metricUnits" jsonb NOT NULL,
    "createdAt" timestamp with time zone DEFAULT now() NOT NULL,
    "updatedAt" timestamp with time zone DEFAULT now() NOT NULL
);

-- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
CREATE INDEX IF NOT EXISTS "idx_player_game_model_player_id" ON "PlayerGameModel" ("playerId");
CREATE INDEX IF NOT EXISTS "idx_player_game_model_club_id" ON "PlayerGameModel" ("clubId");
CREATE INDEX IF NOT EXISTS "idx_player_game_model_calculated_at" ON "PlayerGameModel" ("calculatedAt");

CREATE INDEX IF NOT EXISTS "idx_player_game_model_settings_player_id" ON "PlayerGameModelSettings" ("playerId");
CREATE INDEX IF NOT EXISTS "idx_player_game_model_settings_club_id" ON "PlayerGameModelSettings" ("clubId");

-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ —Ç–∞–±–ª–∏—Ü–∞–º
COMMENT ON TABLE "PlayerGameModel" IS '–ò–≥—Ä–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –∏–≥—Ä–æ–∫–æ–≤ —Å –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏ –∑–∞ 90 –º–∏–Ω—É—Ç';
COMMENT ON TABLE "PlayerGameModelSettings" IS '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –∏–≥—Ä–æ–∫–æ–≤';

COMMENT ON COLUMN "PlayerGameModel"."playerId" IS 'ID –∏–≥—Ä–æ–∫–∞';
COMMENT ON COLUMN "PlayerGameModel"."clubId" IS 'ID –∫–ª—É–±–∞';
COMMENT ON COLUMN "PlayerGameModel"."calculatedAt" IS '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Ä–∞—Å—á–µ—Ç–∞ –º–æ–¥–µ–ª–∏';
COMMENT ON COLUMN "PlayerGameModel"."matchesCount" IS '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—á–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ (–¥–æ 10)';
COMMENT ON COLUMN "PlayerGameModel"."totalMinutes" IS '–û–±—â–µ–µ –≤—Ä–µ–º—è –∏–≥—Ä—ã –≤ –º–∏–Ω—É—Ç–∞—Ö';
COMMENT ON COLUMN "PlayerGameModel"."metrics" IS '–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∑–∞ 90 –º–∏–Ω—É—Ç –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ';
COMMENT ON COLUMN "PlayerGameModel"."matchIds" IS 'ID –º–∞—Ç—á–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤ JSON –º–∞—Å—Å–∏–≤–µ';
COMMENT ON COLUMN "PlayerGameModel"."version" IS '–í–µ—Ä—Å–∏—è –º–æ–¥–µ–ª–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π';

COMMENT ON COLUMN "PlayerGameModelSettings"."playerId" IS 'ID –∏–≥—Ä–æ–∫–∞';
COMMENT ON COLUMN "PlayerGameModelSettings"."clubId" IS 'ID –∫–ª—É–±–∞';
COMMENT ON COLUMN "PlayerGameModelSettings"."selectedMetrics" IS '–í—ã–±—Ä–∞–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ JSON –º–∞—Å—Å–∏–≤–µ';
COMMENT ON COLUMN "PlayerGameModelSettings"."metricUnits" IS '–ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –º–µ—Ç—Ä–∏–∫–∏ –≤ JSON –æ–±—ä–µ–∫—Ç–µ';
`;

async function applyMigration() {
  const client = new Client({
    connectionString: connectionString,
    ssl: {
      rejectUnauthorized: true,
      ca: fs.readFileSync('./yandex_root.crt').toString()
    }
  });

  try {
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');

    console.log('üìù –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏...');
    await client.query(migrationSQL);
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü...');
    const result = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_name IN ('PlayerGameModel', 'PlayerGameModelSettings')
      ORDER BY table_name;
    `);

    console.log('üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:');
    result.rows.forEach(row => {
      console.log(`  - ${row.table_name}`);
    });

    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
    process.exit(1);
  } finally {
    await client.end();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
applyMigration();

