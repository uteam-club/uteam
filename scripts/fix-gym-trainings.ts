import 'dotenv/config';
import { db } from '../src/lib/db';
import { training } from '../src/db/schema/training';
import { eq, like } from 'drizzle-orm';

async function main() {
  console.log('üîç –ò—â–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "Gym"...');
  
  // –ù–∞–π–¥–µ–º –≤—Å–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "Gym" (—Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ)
  const gymTrainings = await db
    .select()
    .from(training)
    .where(like(training.title, '%Gym%'));
  
  console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${gymTrainings.length} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å "Gym" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏`);
  
  if (gymTrainings.length === 0) {
    console.log('‚ùå –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å "Gym" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    return;
  }
  
  // –ü–æ–∫–∞–∂–µ–º –ø—Ä–∏–º–µ—Ä—ã
  console.log('üìã –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:');
  gymTrainings.slice(0, 5).forEach((t, i) => {
    console.log(`  ${i + 1}. "${t.title}" - —Ç–∏–ø: ${t.type}, –¥–∞—Ç–∞: ${t.date}`);
  });
  
  // –û–±–Ω–æ–≤–∏–º —Ç–∏–ø –Ω–∞ GYM –¥–ª—è –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
  console.log('\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ GYM...');
  
  const updated = await db
    .update(training)
    .set({ type: 'GYM' })
    .where(like(training.title, '%Gym%'))
    .returning();
  
  console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updated.length} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫`);
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
  const updatedGymTrainings = await db
    .select()
    .from(training)
    .where(like(training.title, '%Gym%'));
  
  const gymCount = updatedGymTrainings.filter(t => t.type === 'GYM').length;
  const trainingCount = updatedGymTrainings.filter(t => t.type === 'TRAINING').length;
  
  console.log(`üìä –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:`);
  console.log(`  - GYM: ${gymCount} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫`);
  console.log(`  - TRAINING: ${trainingCount} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫`);
}

main().catch((e) => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', e);
  process.exit(1);
});
