const { Pool } = require('pg');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const pool = new Pool({
  host: 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
  port: 6432,
  database: 'uteam',
  user: 'uteam_bot_reader',
  password: 'uteambot567234!',
  ssl: {
    rejectUnauthorized: false
  }
});

async function seedFDCVistaCategories() {
  try {
    console.log('üå± –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è FDC Vista...\n');

    const fdcvistaClubId = '0af208e0-aed2-4374-bb67-c38443a46b8a';

    // 1. –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    const trainingCategories = [
      '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
      '–¢–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', 
      '–§–∏–∑–∏—á–µ—Å–∫–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
      '–ò–≥—Ä–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
      '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ–ª—å–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'
    ];

    console.log('üèÉ‚Äç‚ôÇÔ∏è –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:');
    for (const name of trainingCategories) {
      const result = await pool.query(
        'INSERT INTO "TrainingCategory" (id, name, "clubId", "createdAt", "updatedAt") VALUES (gen_random_uuid(), $1, $2, NOW(), NOW()) RETURNING id, name',
        [name, fdcvistaClubId]
      );
      console.log(`  ‚úÖ ${result.rows[0].name} (ID: ${result.rows[0].id})`);
    }
    console.log('');

    // 2. –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    const exerciseCategoriesResult = await pool.query(
      'SELECT id, name FROM "ExerciseCategory" WHERE "clubId" = $1',
      [fdcvistaClubId]
    );
    
    console.log('üí™ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:');
    exerciseCategoriesResult.rows.forEach(cat => {
      console.log(`  - ${cat.name} (ID: ${cat.id})`);
    });
    console.log('');

    // 3. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const exerciseTags = {
      'First team': [
        '–ü–∞—Å',
        '–£–¥–∞—Ä',
        '–î—Ä–∏–±–ª–∏–Ω–≥',
        '–¢–∞–∫—Ç–∏–∫–∞',
        '–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã',
        '–ò–≥—Ä–∞ –≤ –æ–±–æ—Ä–æ–Ω–µ',
        '–ê—Ç–∞–∫–∞'
      ],
      'Academy': [
        '–¢–µ—Ö–Ω–∏–∫–∞',
        '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è',
        '–°–∫–æ—Ä–æ—Å—Ç—å',
        '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å',
        '–ò–≥—Ä–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è',
        '–†–∞–∑–º–∏–Ω–∫–∞',
        '–ó–∞–º–∏–Ω–∫–∞'
      ]
    };

    console.log('üè∑Ô∏è –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:');
    for (const [categoryName, tags] of Object.entries(exerciseTags)) {
      const category = exerciseCategoriesResult.rows.find(cat => cat.name === categoryName);
      if (category) {
        console.log(`  üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryName}`);
        for (const tagName of tags) {
          const result = await pool.query(
            'INSERT INTO "ExerciseTag" (id, name, "clubId", "exerciseCategoryId", "createdAt", "updatedAt") VALUES (gen_random_uuid(), $1, $2, $3, NOW(), NOW()) RETURNING id, name',
            [tagName, fdcvistaClubId, category.id]
          );
          console.log(`    ‚úÖ ${result.rows[0].name} (ID: ${result.rows[0].id})`);
        }
      }
    }
    console.log('');

    console.log('üéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–ª—è FDC Vista!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await pool.end();
  }
}

seedFDCVistaCategories(); 