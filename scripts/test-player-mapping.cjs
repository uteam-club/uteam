const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîç –ù–∞—á–∏–Ω–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å–∏—Å—Ç–µ–º—ã –º–∞–ø–ø–∏–Ω–≥–æ–≤ –∏–≥—Ä–æ–∫–æ–≤...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function runCommand(command, description) {
  console.log(`üìã ${description}...`);
  try {
    const result = execSync(command, { encoding: 'utf8', cwd: process.cwd() });
    console.log(`‚úÖ ${description} - –£–°–ü–ï–®–ù–û`);
    return result;
  } catch (error) {
    console.log(`‚ùå ${description} - –û–®–ò–ë–ö–ê:`);
    console.log(error.message);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–æ–≤
function checkFile(filePath, description) {
  console.log(`üìÅ ${description}...`);
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ ${description} - –ù–ê–ô–î–ï–ù`);
    return true;
  } else {
    console.log(`‚ùå ${description} - –ù–ï –ù–ê–ô–î–ï–ù`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞
function checkFileContent(filePath, searchText, description) {
  console.log(`üîç ${description}...`);
  try {
    const content = fs.readFileSync(filePath, 'utf8');
    if (content.includes(searchText)) {
      console.log(`‚úÖ ${description} - –ù–ê–ô–î–ï–ù–û`);
      return true;
    } else {
      console.log(`‚ùå ${description} - –ù–ï –ù–ê–ô–î–ï–ù–û`);
      return false;
    }
  } catch (error) {
    console.log(`‚ùå ${description} - –û–®–ò–ë–ö–ê –ß–¢–ï–ù–ò–Ø`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
console.log('=== –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í –°–ò–°–¢–ï–ú–´ ===\n');

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–∏—Å—Ç–µ–º—ã –º–∞–ø–ø–∏–Ω–≥–æ–≤
const mappingFiles = [
  { path: 'src/services/playerMapping.service.ts', desc: '–°–µ—Ä–≤–∏—Å –º–∞–ø–ø–∏–Ω–≥–æ–≤ –∏–≥—Ä–æ–∫–æ–≤' },
  { path: 'src/db/schema/playerMapping.ts', desc: '–°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –º–∞–ø–ø–∏–Ω–≥–æ–≤' },
  { path: 'src/components/gps/PlayerMappingModal.tsx', desc: '–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–∞–ø–ø–∏–Ω–≥–æ–≤' },
  { path: 'src/components/gps/PlayerMappingsTab.tsx', desc: '–í–∫–ª–∞–¥–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–∞–º–∏' },
  { path: 'src/app/api/player-mappings/route.ts', desc: 'API –º–∞–ø–ø–∏–Ω–≥–æ–≤ (GET/POST)' },
  { path: 'src/app/api/player-mappings/[id]/route.ts', desc: 'API –º–∞–ø–ø–∏–Ω–≥–æ–≤ (DELETE)' },
  { path: 'src/app/api/player-mappings/auto-match/route.ts', desc: 'API –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è' },
  { path: 'src/app/api/gps-reports/extract-players/route.ts', desc: 'API –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞' }
];

let filesFound = 0;
mappingFiles.forEach(file => {
  if (checkFile(file.path, file.desc)) {
    filesFound++;
  }
});

console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${filesFound}/${mappingFiles.length} —Ñ–∞–π–ª–æ–≤ –Ω–∞–π–¥–µ–Ω–æ\n`);

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Å–µ—Ä–≤–∏—Å–µ
console.log('=== –ü–†–û–í–ï–†–ö–ê –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò ===\n');

const serviceChecks = [
  { file: 'src/services/playerMapping.service.ts', search: 'findExistingMapping', desc: '–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞–ø–ø–∏–Ω–≥–æ–≤' },
  { file: 'src/services/playerMapping.service.ts', search: 'autoMatchPlayer', desc: '–§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è' },
  { file: 'src/services/playerMapping.service.ts', search: 'fuzzyMatch', desc: '–§—É–Ω–∫—Ü–∏—è –Ω–µ—á–µ—Ç–∫–æ–≥–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è' },
  { file: 'src/services/playerMapping.service.ts', search: 'saveMapping', desc: '–§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–∞' },
  { file: 'src/services/playerMapping.service.ts', search: 'getTeamMappings', desc: '–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–æ–≤ –∫–æ–º–∞–Ω–¥—ã' },
  { file: 'src/services/playerMapping.service.ts', search: 'deleteMapping', desc: '–§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–∞' }
];

let functionsFound = 0;
serviceChecks.forEach(check => {
  if (checkFileContent(check.file, check.search, check.desc)) {
    functionsFound++;
  }
});

console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${functionsFound}/${serviceChecks.length} —Ñ—É–Ω–∫—Ü–∏–π –Ω–∞–π–¥–µ–Ω–æ\n`);

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
console.log('=== –ü–†–û–í–ï–†–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò ===\n');

const integrationChecks = [
  { file: 'src/components/gps/UploadGpsReportModal.tsx', search: 'PlayerMappingModal', desc: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º –∑–∞–≥—Ä—É–∑–∫–∏' },
  { file: 'src/app/dashboard/fitness/gps-reports/page.tsx', search: 'PlayerMappingsTab', desc: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π GPS' },
  { file: 'src/app/api/gps-reports/route.ts', search: 'PlayerMappingService', desc: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–æ–≤' },
  { file: 'src/db/schema/index.ts', search: 'playerMapping', desc: '–≠–∫—Å–ø–æ—Ä—Ç —Å—Ö–µ–º—ã –º–∞–ø–ø–∏–Ω–≥–æ–≤' }
];

let integrationsFound = 0;
integrationChecks.forEach(check => {
  if (checkFileContent(check.file, check.search, check.desc)) {
    integrationsFound++;
  }
});

console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${integrationsFound}/${integrationChecks.length} –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –Ω–∞–π–¥–µ–Ω–æ\n`);

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–≥–æ–≤
console.log('=== –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ë–ê–ì–û–í ===\n');

const bugFixes = [
  { file: 'src/services/playerMapping.service.ts', search: 'firstName', desc: '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ firstName/lastName –≤–º–µ—Å—Ç–æ name' },
  { file: 'src/services/playerMapping.service.ts', search: 'gpsSystem || \'unknown\'', desc: '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –ø–µ—Ä–µ–¥–∞—á–∞ gpsSystem –≤ autoMatchPlayer' },
  { file: 'src/app/api/player-mappings/auto-match/route.ts', search: 'gpsSystem', desc: '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –ø–µ—Ä–µ–¥–∞—á–∞ gpsSystem –≤ API' },
  { file: 'src/components/gps/PlayerMappingModal.tsx', search: 'gpsSystem', desc: '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –ø–µ—Ä–µ–¥–∞—á–∞ gpsSystem –≤ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ' }
];

let fixesFound = 0;
bugFixes.forEach(fix => {
  if (checkFileContent(fix.file, fix.search, fix.desc)) {
    fixesFound++;
  }
});

console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${fixesFound}/${bugFixes.length} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∞–π–¥–µ–Ω–æ\n`);

// 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–∏–ª—è—Ü–∏—é TypeScript
console.log('=== –ü–†–û–í–ï–†–ö–ê –ö–û–ú–ü–ò–õ–Ø–¶–ò–ò ===\n');

const compileResult = runCommand('npx tsc --noEmit', '–ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏');

// –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
console.log('\n=== –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ ===\n');

const totalChecks = filesFound + functionsFound + integrationsFound + fixesFound;
const maxChecks = mappingFiles.length + serviceChecks.length + integrationChecks.length + bugFixes.length;

console.log(`üìà –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${totalChecks}/${maxChecks} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ`);

if (totalChecks >= maxChecks * 0.9) {
  console.log('üéâ –°–∏—Å—Ç–µ–º–∞ –º–∞–ø–ø–∏–Ω–≥–æ–≤ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
} else if (totalChecks >= maxChecks * 0.7) {
  console.log('‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ –º–∞–ø–ø–∏–Ω–≥–æ–≤ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏');
} else {
  console.log('‚ùå –°–∏—Å—Ç–µ–º–∞ –º–∞–ø–ø–∏–Ω–≥–æ–≤ —Ç—Ä–µ–±—É–µ—Ç —Å–µ—Ä—å–µ–∑–Ω–æ–π –¥–æ—Ä–∞–±–æ—Ç–∫–∏');
}

console.log('\n=== –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ===\n');

if (filesFound < mappingFiles.length) {
  console.log('üîß –°–æ–∑–¥–∞–π—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã —Å–∏—Å—Ç–µ–º—ã –º–∞–ø–ø–∏–Ω–≥–æ–≤');
}

if (functionsFound < serviceChecks.length) {
  console.log('üîß –†–µ–∞–ª–∏–∑—É–π—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ PlayerMappingService');
}

if (integrationsFound < integrationChecks.length) {
  console.log('üîß –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –º–∞–ø–ø–∏–Ω–≥–æ–≤ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏');
}

if (fixesFound < bugFixes.length) {
  console.log('üîß –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –º–∞–ø–ø–∏–Ω–≥–æ–≤');
}

if (compileResult === null) {
  console.log('üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏');
}

console.log('\n‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'); 