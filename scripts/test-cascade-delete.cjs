const { Pool } = require('pg');
const fs = require('fs');

const pool = new Pool({
  host: 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
  port: 6432,
  database: 'uteam',
  user: 'uteam-admin',
  password: 'Mell567234!',
  ssl: {
    rejectUnauthorized: false,
    ca: fs.readFileSync('./yandex_root.crt').toString()
  }
});

async function testCascadeDelete() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ GPS –æ—Ç—á–µ—Ç–æ–≤...\n');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ GPS –æ—Ç—á–µ—Ç–æ–≤
    const initialCountQuery = 'SELECT COUNT(*) as count FROM "GpsReport"';
    const initialCountResult = await pool.query(initialCountQuery);
    const initialCount = parseInt(initialCountResult.rows[0].count);
    console.log(`üìä –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ GPS –æ—Ç—á–µ—Ç–æ–≤: ${initialCount}`);

    // 2. –ù–∞—Ö–æ–¥–∏–º –º–∞—Ç—á —Å GPS –æ—Ç—á–µ—Ç–æ–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const matchWithReportQuery = `
      SELECT 
        m.id as match_id,
        m."opponentName",
        gr.id as report_id,
        gr.name as report_name
      FROM "Match" m
      JOIN "GpsReport" gr ON gr."eventId" = m.id AND gr."eventType" = 'MATCH'
      LIMIT 1;
    `;
    
    const matchWithReportResult = await pool.query(matchWithReportQuery);
    
    if (matchWithReportResult.rows.length === 0) {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –º–∞—Ç—á–µ–π —Å GPS –æ—Ç—á–µ—Ç–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    const testMatch = matchWithReportResult.rows[0];
    console.log(`\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –º–∞—Ç—á–∞: ${testMatch.opponentName}`);
    console.log(`   Match ID: ${testMatch.match_id}`);
    console.log(`   Report ID: ${testMatch.report_id}`);
    console.log(`   Report Name: ${testMatch.report_name}`);

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç—á–µ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    const reportExistsQuery = 'SELECT COUNT(*) as count FROM "GpsReport" WHERE id = $1';
    const reportExistsResult = await pool.query(reportExistsQuery, [testMatch.report_id]);
    const reportExists = parseInt(reportExistsResult.rows[0].count) > 0;
    console.log(`\n‚úÖ –û—Ç—á–µ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º: ${reportExists}`);

    if (!reportExists) {
      console.log('‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç');
      return;
    }

    // 4. –£–¥–∞–ª—è–µ–º –º–∞—Ç—á (–¥–æ–ª–∂–µ–Ω —Å—Ä–∞–±–æ—Ç–∞—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä)
    console.log('\nüóëÔ∏è –£–¥–∞–ª—è–µ–º –º–∞—Ç—á...');
    const deleteMatchQuery = 'DELETE FROM "Match" WHERE id = $1';
    await pool.query(deleteMatchQuery, [testMatch.match_id]);
    console.log('‚úÖ –ú–∞—Ç—á —É–¥–∞–ª–µ–Ω');

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ GPS –æ—Ç—á–µ—Ç —Ç–æ–∂–µ —É–¥–∞–ª–µ–Ω
    const reportAfterDeleteResult = await pool.query(reportExistsQuery, [testMatch.report_id]);
    const reportAfterDelete = parseInt(reportAfterDeleteResult.rows[0].count) > 0;
    console.log(`\nüîç –û—Ç—á–µ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –º–∞—Ç—á–∞: ${reportAfterDelete}`);

    if (reportAfterDelete) {
      console.log('‚ùå –û–®–ò–ë–ö–ê: GPS –æ—Ç—á–µ—Ç –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!');
    } else {
      console.log('‚úÖ –£–°–ü–ï–•: GPS –æ—Ç—á–µ—Ç –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω!');
    }

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤
    const finalCountResult = await pool.query(initialCountQuery);
    const finalCount = parseInt(finalCountResult.rows[0].count);
    console.log(`\nüìä –§–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ GPS –æ—Ç—á–µ—Ç–æ–≤: ${finalCount}`);
    console.log(`üìâ –£–¥–∞–ª–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤: ${initialCount - finalCount}`);

    // 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏...');
    
    const trainingWithReportQuery = `
      SELECT 
        t.id as training_id,
        t.title as training_title,
        gr.id as report_id,
        gr.name as report_name
      FROM "Training" t
      JOIN "GpsReport" gr ON gr."eventId" = t.id AND gr."eventType" = 'TRAINING'
      LIMIT 1;
    `;
    
    const trainingWithReportResult = await pool.query(trainingWithReportQuery);
    
    if (trainingWithReportResult.rows.length === 0) {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å GPS –æ—Ç—á–µ—Ç–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    } else {
      const testTraining = trainingWithReportResult.rows[0];
      console.log(`\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: ${testTraining.training_title}`);
      console.log(`   Training ID: ${testTraining.training_id}`);
      console.log(`   Report ID: ${testTraining.report_id}`);
      console.log(`   Report Name: ${testTraining.report_name}`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç—á–µ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      const trainingReportExistsResult = await pool.query(reportExistsQuery, [testTraining.report_id]);
      const trainingReportExists = parseInt(trainingReportExistsResult.rows[0].count) > 0;
      console.log(`\n‚úÖ –û—Ç—á–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º: ${trainingReportExists}`);

      if (trainingReportExists) {
        // –£–¥–∞–ª—è–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
        console.log('\nüóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É...');
        const deleteTrainingQuery = 'DELETE FROM "Training" WHERE id = $1';
        await pool.query(deleteTrainingQuery, [testTraining.training_id]);
        console.log('‚úÖ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —É–¥–∞–ª–µ–Ω–∞');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ GPS –æ—Ç—á–µ—Ç —Ç–æ–∂–µ —É–¥–∞–ª–µ–Ω
        const trainingReportAfterDeleteResult = await pool.query(reportExistsQuery, [testTraining.report_id]);
        const trainingReportAfterDelete = parseInt(trainingReportAfterDeleteResult.rows[0].count) > 0;
        console.log(`\nüîç –û—Ç—á–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: ${trainingReportAfterDelete}`);

        if (trainingReportAfterDelete) {
          console.log('‚ùå –û–®–ò–ë–ö–ê: GPS –æ—Ç—á–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!');
        } else {
          console.log('‚úÖ –£–°–ü–ï–•: GPS –æ—Ç—á–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω!');
        }
      }
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  } finally {
    await pool.end();
  }
}

testCascadeDelete(); 