#!/usr/bin/env tsx

/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
 */

import { db } from '../src/lib/db';
import { rpeSurveyResponse } from '../src/db/schema';
import { eq, or, and, gte } from 'drizzle-orm';

async function fixAllDurationIssues() {
  console.log('üõ†Ô∏è  –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫...');
  
  try {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const suspiciousRecords = await db
      .select({
        id: rpeSurveyResponse.id,
        playerId: rpeSurveyResponse.playerId,
        durationMinutes: rpeSurveyResponse.durationMinutes,
        rpeScore: rpeSurveyResponse.rpeScore,
        createdAt: rpeSurveyResponse.createdAt
      })
      .from(rpeSurveyResponse)
      .where(
        or(
          eq(rpeSurveyResponse.durationMinutes, 70),  // 70 –º–∏–Ω—É—Ç (–∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞)
          eq(rpeSurveyResponse.durationMinutes, 0),   // 0 –º–∏–Ω—É—Ç (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)
          and(
            gte(rpeSurveyResponse.durationMinutes, 60), // –æ—Ç 60 –¥–æ 90 - –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω
            eq(rpeSurveyResponse.durationMinutes, 80)   // 80 –º–∏–Ω—É—Ç —Ç–æ–∂–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–µ—Ñ–æ–ª—Ç–æ–º
          )
        )
      );

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${suspiciousRecords.length} –∑–∞–ø–∏—Å–µ–π —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏`);

    if (suspiciousRecords.length === 0) {
      console.log('‚úÖ –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      return;
    }

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const durationGroups = suspiciousRecords.reduce((acc, record) => {
      const duration = record.durationMinutes || 0;
      acc[duration] = (acc[duration] || 0) + 1;
      return acc;
    }, {} as Record<number, number>);

    console.log('\nüìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:');
    Object.entries(durationGroups).forEach(([duration, count]) => {
      console.log(`  ${duration} –º–∏–Ω: ${count} –∑–∞–ø–∏—Å–µ–π`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
    const thirtyDaysAgo = new Date();
    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);

    const recentSuspicious = suspiciousRecords.filter(r => r.createdAt > thirtyDaysAgo);
    console.log(`\nüìÖ –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π: ${recentSuspicious.length} –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    console.log('\nüîç –ü—Ä–∏–º–µ—Ä—ã –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π:');
    suspiciousRecords.slice(0, 10).forEach((record, index) => {
      const date = record.createdAt.toISOString().split('T')[0];
      const time = record.createdAt.toISOString().split('T')[1].substr(0, 5);
      console.log(`  ${index + 1}. ${date} ${time} - RPE: ${record.rpeScore}, –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${record.durationMinutes} –º–∏–Ω`);
    });

    console.log('\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∑–∞–ø–∏—Å–∏ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏!');
    console.log('   –≠—Ç–æ –º–æ–≥—É—Ç –±—ã—Ç—å:');
    console.log('   - 70 –º–∏–Ω: –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞');
    console.log('   - 80 –º–∏–Ω: –¥—Ä—É–≥–æ–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ');
    console.log('   - 0 –º–∏–Ω: –æ—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');

    const autoConfirm = process.env.AUTO_CONFIRM === 'true';
    
    if (!autoConfirm) {
      console.log('\nüí° –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å AUTO_CONFIRM=true');
      console.log('   –ü—Ä–∏–º–µ—Ä: AUTO_CONFIRM=true npm run fix-all-durations');
      console.log('\nüîß –ß—Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ:');
      console.log('   - –í—Å–µ –∑–∞–ø–∏—Å–∏ —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é 70, 80, 0 –º–∏–Ω—É—Ç –±—É–¥—É—Ç –æ—á–∏—â–µ–Ω—ã (—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ null)');
      console.log('   - –¢—Ä–µ–Ω–µ—Ä–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–Ω–æ–≤–æ —É–∫–∞–∑–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å');
      return;
    }

    console.log('\nüîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –ø–æ—Ä—Ü–∏—è–º–∏
    const suspiciousValues = [70, 80, 0];
    let totalFixed = 0;

    for (const suspiciousValue of suspiciousValues) {
      const recordsToFix = suspiciousRecords.filter(r => r.durationMinutes === suspiciousValue);
      
      if (recordsToFix.length === 0) continue;

      console.log(`   üîÑ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ${recordsToFix.length} –∑–∞–ø–∏—Å–µ–π —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é ${suspiciousValue} –º–∏–Ω...`);

      // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ —Å —ç—Ç–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
      const result = await db
        .update(rpeSurveyResponse)
        .set({ durationMinutes: null })
        .where(eq(rpeSurveyResponse.durationMinutes, suspiciousValue));

      totalFixed += recordsToFix.length;
      console.log(`   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${recordsToFix.length} –∑–∞–ø–∏—Å–µ–π —Å ${suspiciousValue} –º–∏–Ω`);
    }

    console.log(`\nüéâ –í—Å–µ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${totalFixed} –∑–∞–ø–∏—Å–µ–π`);

    // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    const remainingSuspicious = await db
      .select({ count: rpeSurveyResponse.id })
      .from(rpeSurveyResponse)
      .where(
        or(
          eq(rpeSurveyResponse.durationMinutes, 70),
          eq(rpeSurveyResponse.durationMinutes, 80),
          eq(rpeSurveyResponse.durationMinutes, 0)
        )
      );

    if (remainingSuspicious.length === 0) {
      console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –±–æ–ª—å—à–µ –Ω–µ—Ç');
    } else {
      console.log(`‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –≤—Å–µ –µ—â–µ –æ—Å—Ç–∞–ª–æ—Å—å ${remainingSuspicious.length} –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π`);
    }

    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('   ‚úÖ –í—Å–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ—á–∏—â–µ–Ω—ã');
    console.log('   ‚úÖ –í –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è "–ù–µ –∑–∞–¥–∞–Ω–æ"');
    console.log('   üìù –¢—Ä–µ–Ω–µ—Ä–∞–º –Ω—É–∂–Ω–æ –∑–∞–Ω–æ–≤–æ —É–∫–∞–∑–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∫–∞–∂–¥–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
fixAllDurationIssues()
  .then(() => {
    console.log('\nüèÅ –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    process.exit(0);
  })
  .catch((error) => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
