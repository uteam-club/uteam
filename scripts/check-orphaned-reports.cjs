const { Pool } = require('pg');
const fs = require('fs');

const pool = new Pool({
  host: 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
  port: 6432,
  database: 'uteam',
  user: 'uteam-admin',
  password: 'Mell567234!',
  ssl: {
    rejectUnauthorized: false,
    ca: fs.readFileSync('./yandex_root.crt').toString()
  }
});

async function checkOrphanedReports() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–∏—Ä–æ—Ç–Ω—ã—Ö GPS –æ—Ç—á–µ—Ç–æ–≤...\n');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º GPS –æ—Ç—á–µ—Ç—ã, —Å—Å—ã–ª–∞—é—â–∏–µ—Å—è –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ç—á–∏
    console.log('üìä –ü–†–û–í–ï–†–ö–ê GPS –û–¢–ß–ï–¢–û–í –ú–ê–¢–ß–ï–ô:');
    const orphanedMatchReportsQuery = `
      SELECT 
        gr.id,
        gr.name,
        gr."eventId",
        gr."eventType",
        gr."clubId",
        gr."createdAt",
        c.name as club_name
      FROM "GpsReport" gr
      LEFT JOIN "Match" m ON gr."eventId" = m.id
      JOIN "Club" c ON gr."clubId" = c.id
      WHERE gr."eventType" = 'MATCH' 
        AND m.id IS NULL
      ORDER BY gr."createdAt" DESC;
    `;

    const orphanedMatchReportsResult = await pool.query(orphanedMatchReportsQuery);
    console.log(`\nüìã –ù–∞–π–¥–µ–Ω–æ —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –º–∞—Ç—á–µ–π: ${orphanedMatchReportsResult.rows.length}`);

    if (orphanedMatchReportsResult.rows.length > 0) {
      console.log('\n‚ùå –°–ò–†–û–¢–°–ö–ò–ï –û–¢–ß–ï–¢–´ –ú–ê–¢–ß–ï–ô:');
      orphanedMatchReportsResult.rows.forEach((row, index) => {
        console.log(`\n${index + 1}. ${row.name}`);
        console.log(`   ID: ${row.id}`);
        console.log(`   Event ID: ${row.eventId}`);
        console.log(`   Club: ${row.club_name}`);
        console.log(`   Created: ${new Date(row.createdAt).toLocaleString()}`);
      });
    } else {
      console.log('‚úÖ –°–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –º–∞—Ç—á–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º GPS –æ—Ç—á–µ—Ç—ã, —Å—Å—ã–ª–∞—é—â–∏–µ—Å—è –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    console.log('\nüìä –ü–†–û–í–ï–†–ö–ê GPS –û–¢–ß–ï–¢–û–í –¢–†–ï–ù–ò–†–û–í–û–ö:');
    const orphanedTrainingReportsQuery = `
      SELECT 
        gr.id,
        gr.name,
        gr."eventId",
        gr."eventType",
        gr."clubId",
        gr."createdAt",
        c.name as club_name
      FROM "GpsReport" gr
      LEFT JOIN "Training" t ON gr."eventId" = t.id
      JOIN "Club" c ON gr."clubId" = c.id
      WHERE gr."eventType" = 'TRAINING' 
        AND t.id IS NULL
      ORDER BY gr."createdAt" DESC;
    `;

    const orphanedTrainingReportsResult = await pool.query(orphanedTrainingReportsQuery);
    console.log(`\nüìã –ù–∞–π–¥–µ–Ω–æ —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: ${orphanedTrainingReportsResult.rows.length}`);

    if (orphanedTrainingReportsResult.rows.length > 0) {
      console.log('\n‚ùå –°–ò–†–û–¢–°–ö–ò–ï –û–¢–ß–ï–¢–´ –¢–†–ï–ù–ò–†–û–í–û–ö:');
      orphanedTrainingReportsResult.rows.forEach((row, index) => {
        console.log(`\n${index + 1}. ${row.name}`);
        console.log(`   ID: ${row.id}`);
        console.log(`   Event ID: ${row.eventId}`);
        console.log(`   Club: ${row.club_name}`);
        console.log(`   Created: ${new Date(row.createdAt).toLocaleString()}`);
      });
    } else {
      console.log('‚úÖ –°–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }

    // 3. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalOrphaned = orphanedMatchReportsResult.rows.length + orphanedTrainingReportsResult.rows.length;
    console.log(`\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`);
    console.log(`   –í—Å–µ–≥–æ —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤: ${totalOrphaned}`);
    console.log(`   –°–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –º–∞—Ç—á–µ–π: ${orphanedMatchReportsResult.rows.length}`);
    console.log(`   –°–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: ${orphanedTrainingReportsResult.rows.length}`);

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ GPS –æ—Ç—á–µ—Ç–æ–≤
    const totalReportsQuery = 'SELECT COUNT(*) as count FROM "GpsReport"';
    const totalReportsResult = await pool.query(totalReportsQuery);
    const totalReports = parseInt(totalReportsResult.rows[0].count);
    
    console.log(`\nüìà –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:`);
    console.log(`   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ GPS –æ—Ç—á–µ—Ç–æ–≤: ${totalReports}`);
    console.log(`   –ü—Ä–æ—Ü–µ–Ω—Ç —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤: ${totalOrphaned > 0 ? ((totalOrphaned / totalReports) * 100).toFixed(2) : 0}%`);

    // 5. –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã —Å–∏—Ä–æ—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Ö —É–¥–∞–ª–∏—Ç—å
    if (totalOrphaned > 0) {
      console.log(`\n‚ö†Ô∏è  –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:`);
      console.log(`   –ù–∞–π–¥–µ–Ω–æ ${totalOrphaned} —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª–∏—Ç—å.`);
      console.log(`   –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç: node scripts/cleanup-orphaned-reports.cjs`);
    } else {
      console.log(`\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢:`);
      console.log(`   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —á–∏—Å—Ç–∞—è - —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!`);
      console.log(`   –ö–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.`);
    }

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á–µ—Ç—ã —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ eventType
    console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –ù–ï–ö–û–†–†–ï–ö–¢–ù–´–• EVENT_TYPE:');
    const invalidEventTypeQuery = `
      SELECT 
        gr.id,
        gr.name,
        gr."eventId",
        gr."eventType",
        gr."clubId",
        gr."createdAt",
        c.name as club_name
      FROM "GpsReport" gr
      JOIN "Club" c ON gr."clubId" = c.id
      WHERE gr."eventType" NOT IN ('MATCH', 'TRAINING')
      ORDER BY gr."createdAt" DESC;
    `;

    const invalidEventTypeResult = await pool.query(invalidEventTypeQuery);
    console.log(`\nüìã –ù–∞–π–¥–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ eventType: ${invalidEventTypeResult.rows.length}`);

    if (invalidEventTypeResult.rows.length > 0) {
      console.log('\n‚ö†Ô∏è  –û–¢–ß–ï–¢–´ –° –ù–ï–ö–û–†–†–ï–ö–¢–ù–´–ú–ò EVENT_TYPE:');
      invalidEventTypeResult.rows.forEach((row, index) => {
        console.log(`\n${index + 1}. ${row.name}`);
        console.log(`   ID: ${row.id}`);
        console.log(`   Event ID: ${row.eventId}`);
        console.log(`   Event Type: ${row.eventType}`);
        console.log(`   Club: ${row.club_name}`);
        console.log(`   Created: ${new Date(row.createdAt).toLocaleString()}`);
      });
    } else {
      console.log('‚úÖ –í—Å–µ –æ—Ç—á–µ—Ç—ã –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ eventType');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏—Ä–æ—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤:', error);
  } finally {
    await pool.end();
  }
}

checkOrphanedReports(); 