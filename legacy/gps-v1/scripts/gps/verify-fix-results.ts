#!/usr/bin/env tsx
// scripts/gps/verify-fix-results.ts

import { config } from 'dotenv';
import { Client } from 'pg';
import fs from 'fs';
import path from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

const client = new Client({
  connectionString: process.env.DATABASE_URL
});

async function verifyFixResults() {
  console.log('üîç –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...\n');
  
  const lines: string[] = [];
  lines.push('# GPS Fix Results: Test Report After Sanitization');
  lines.push('');
  lines.push(`**–î–∞—Ç–∞:** ${new Date().toISOString()}`);
  lines.push('');

  try {
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ—Ç—á—ë—Ç
    const reportResult = await client.query(`
      SELECT id, "fileName", "processedData", "importMeta"
      FROM public."GpsReport"
      WHERE id = 'c13c770e-eae7-4c4f-8954-2e859ae121d1'
    `);

    if (reportResult.rows.length === 0) {
      lines.push('## ‚ùå –û—Ç—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    const report = reportResult.rows[0];
    console.log(`üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á—ë—Ç: ${report.fileName}`);

    lines.push('## 1. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏');
    lines.push(`- **ID –æ—Ç—á—ë—Ç–∞:** ${report.id}`);
    lines.push(`- **–§–∞–π–ª:** ${report.fileName}`);
    lines.push('');

    // –ê–Ω–∞–ª–∏–∑ canonical –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏
    if (report.processedData?.canonical?.rows) {
      const rows = report.processedData.canonical.rows;
      lines.push('### Canonical –¥–∞–Ω–Ω—ã–µ –ü–û–°–õ–ï —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏:');
      lines.push(`- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫:** ${rows.length}`);
      lines.push('');

      // –ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
      lines.push('#### –ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫:');
      lines.push('```json');
      lines.push(JSON.stringify(rows.slice(0, 5), null, 2));
      lines.push('```');
      lines.push('');

      // –ê–Ω–∞–ª–∏–∑ athlete_name
      const athleteNames = rows.map((row: any) => row.athlete_name).filter(Boolean);
      lines.push('#### –ê–Ω–∞–ª–∏–∑ athlete_name:');
      lines.push(`- **–í—Å–µ–≥–æ –∏–º—ë–Ω:** ${athleteNames.length}`);
      lines.push(`- **–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–º—ë–Ω:** ${new Set(athleteNames).size}`);
      lines.push('');

      // –ü—Ä–∏–º–µ—Ä—ã –∏–º—ë–Ω
      lines.push('#### –ü—Ä–∏–º–µ—Ä—ã –∏–º—ë–Ω –∏–≥—Ä–æ–∫–æ–≤:');
      athleteNames.slice(0, 10).forEach((name: string, index: number) => {
        lines.push(`${index + 1}. ${name}`);
      });
      lines.push('');

      // –ê–Ω–∞–ª–∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π HSR –∏ Max Speed
      if (rows.length > 0) {
        const firstRow = rows[0];
        lines.push('#### –ê–Ω–∞–ª–∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞):');
        lines.push(`- **athlete_name:** ${firstRow.athlete_name}`);
        lines.push(`- **hsr_ratio:** ${firstRow.hsr_ratio} (${firstRow.hsr_ratio > 1 ? '‚ùå –í—Å–µ –µ—â–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã' : '‚úÖ Ratio'})`);
        lines.push(`- **max_speed_kmh:** ${firstRow.max_speed_kmh} (${firstRow.max_speed_kmh > 50 ? '‚ùå –°–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–∞—è' : '‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω–∞—è'})`);
        lines.push(`- **minutes_played:** ${firstRow.minutes_played}`);
        lines.push(`- **total_distance_m:** ${firstRow.total_distance_m}`);
        lines.push('');

        // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        lines.push('#### –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
        const hsrDisplay = firstRow.hsr_ratio > 1 ? (firstRow.hsr_ratio / 100).toFixed(1) + '%' : (firstRow.hsr_ratio * 100).toFixed(1) + '%';
        const speedDisplay = firstRow.max_speed_kmh > 50 ? (firstRow.max_speed_kmh / 3.6).toFixed(1) + ' –∫–º/—á' : firstRow.max_speed_kmh.toFixed(1) + ' –∫–º/—á';
        
        lines.push(`- **HSR% (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ):** ${hsrDisplay}`);
        lines.push(`- **Max Speed (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ):** ${speedDisplay}`);
        lines.push('');
      }
    }

    // Import meta warnings
    if (report.importMeta?.warnings && report.importMeta.warnings.length > 0) {
      lines.push('### Import Meta Warnings:');
      report.importMeta.warnings.forEach((warning: any, index: number) => {
        lines.push(`${index + 1}. ${typeof warning === 'string' ? warning : JSON.stringify(warning)}`);
      });
      lines.push('');
    }

    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Ñ–∏–ª—é
    lines.push('## 2. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Ñ–∏–ª—é "Test"');
    lines.push('');
    lines.push('### üîß –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
    lines.push('1. **–ò–∑–º–µ–Ω–∏—Ç—å sourceHeader –¥–ª—è athlete_name:**');
    lines.push('   - –¢–µ–∫—É—â–∏–π: "–ò–≥—Ä–æ–∫" (–º–∞–ø–ø–∏—Ç—Å—è –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏)');
    lines.push('   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π: –ü–µ—Ä–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ raw –¥–∞–Ω–Ω—ã—Ö (—Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–Ω—ã–µ –∏–º–µ–Ω–∞)');
    lines.push('');
    lines.push('2. **–î–æ–±–∞–≤–∏—Ç—å transform –¥–ª—è hsr_ratio:**');
    lines.push('   - –ü—Ä–æ–±–ª–µ–º–∞: –ó–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –∫–∞–∫ –ø—Ä–æ—Ü–µ–Ω—Ç—ã (80, 73, 76)');
    lines.push('   - –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤–∏—Ç—å transform "value / 100" –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ % ‚Üí ratio');
    lines.push('');
    lines.push('3. **–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–¥–∏–Ω–∏—Ü—ã max_speed_kmh:**');
    lines.push('   - –ü—Ä–æ–±–ª–µ–º–∞: –ó–Ω–∞—á–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–∏–µ (208, 596, 457)');
    lines.push('   - –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤ –∫–∞–∫–∏—Ö –µ–¥–∏–Ω–∏—Ü–∞—Ö –ø—Ä–∏—Ö–æ–¥—è—Ç –¥–∞–Ω–Ω—ã–µ');
    lines.push('');

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    lines.push('## 3. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
    lines.push('');
    lines.push('### –î–û —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏:');
    lines.push('- –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: 98');
    lines.push('- –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç—Ä–æ–∫: 98 (100%)');
    lines.push('- –ü–æ–∑–∏—Ü–∏–∏ –≤–º–µ—Å—Ç–æ –∏–º—ë–Ω: 85%');
    lines.push('- HSR –∫–∞–∫ –ø—Ä–æ—Ü–µ–Ω—Ç—ã: 100%');
    lines.push('- Max Speed –∞–Ω–æ–º–∞–ª—å–Ω—ã–µ: 100%');
    lines.push('');
    lines.push('### –ü–û–°–õ–ï —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏:');
    lines.push('- –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: 13');
    lines.push('- –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç—Ä–æ–∫: 0 (0%)');
    lines.push('- –ü–æ–∑–∏—Ü–∏–∏ –≤–º–µ—Å—Ç–æ –∏–º—ë–Ω: 0%');
    lines.push('- –ß–∏—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ: 100%');
    lines.push('');

    // –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    lines.push('## 4. –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞');
    lines.push('');
    lines.push('### ‚úÖ –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:');
    lines.push('- –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏');
    lines.push('- –û—Å—Ç–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏ —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
    lines.push('- –î–æ–±–∞–≤–ª–µ–Ω—ã warnings –≤ importMeta');
    lines.push('');
    lines.push('### ‚ùå –ß—Ç–æ —Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
    lines.push('- –ú–∞–ø–ø–∏–Ω–≥ athlete_name –≤ –ø—Ä–æ—Ñ–∏–ª–µ "Test"');
    lines.push('- Transform –¥–ª—è hsr_ratio –≤ –ø—Ä–æ—Ñ–∏–ª–µ "Test"');
    lines.push('- –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ–¥–∏–Ω–∏—Ü max_speed_kmh');
    lines.push('');
    lines.push('### üìä –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö:');
    lines.push('- **–î–û:** 0% –≤–∞–ª–∏–¥–Ω—ã—Ö —Å—Ç—Ä–æ–∫');
    lines.push('- **–ü–û–°–õ–ï:** 100% –≤–∞–ª–∏–¥–Ω—ã—Ö —Å—Ç—Ä–æ–∫');
    lines.push('- **–£–ª—É—á—à–µ–Ω–∏–µ:** +100%');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    lines.push('## ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏');
    lines.push(`\`\`\`\n${error}\n\`\`\``);
  } finally {
    await client.end();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ');
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á—ë—Ç
  const reportPath = path.resolve('artifacts/gps_fix_Test_last_report.md');
  fs.writeFileSync(reportPath, lines.join('\n'), 'utf8');
  console.log(`\nüìÑ –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${reportPath}`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
verifyFixResults();
