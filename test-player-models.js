// –¢–µ—Å—Ç API –¥–ª—è –∏–≥—Ä–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –∏–≥—Ä–æ–∫–æ–≤

const API_BASE = 'http://localhost:3000';

async function testPlayerModels() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∏–≥—Ä–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –∏–≥—Ä–æ–∫–æ–≤...\n');

  try {
    // –¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º reportId (–Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π)
    const testReportId = 'test-report-id';
    const testProfileId = 'test-profile-id';
    
    console.log(`1Ô∏è‚É£ –¢–µ—Å—Ç API /api/gps/reports/${testReportId}/player-models...`);
    const response = await fetch(`${API_BASE}/api/gps/reports/${testReportId}/player-models?profileId=${testProfileId}`);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤: ${data.players?.length || 0}`);
      
      if (data.players && data.players.length > 0) {
        console.log('\nüìã –î–µ—Ç–∞–ª–∏ –∏–≥—Ä–æ–∫–æ–≤:');
        data.players.forEach((player, index) => {
          console.log(`${index + 1}. ${player.firstName} ${player.lastName}`);
          console.log(`   - –ü–æ–∑–∏—Ü–∏—è: ${player.position} #${player.jerseyNumber}`);
          console.log(`   - –í—Ä–µ–º—è –∏–≥—Ä—ã: ${player.actualDuration} –º–∏–Ω`);
          console.log(`   - –ï—Å—Ç—å –∏–≥—Ä–æ–≤–∞—è –º–æ–¥–µ–ª—å: ${player.hasGameModel ? '–î–∞' : '–ù–µ—Ç'}`);
          if (player.hasGameModel && player.gameModelInfo) {
            console.log(`   - –ú–æ–¥–µ–ª—å: ${player.gameModelInfo.matchesCount} –º–∞—Ç—á–µ–π, ${player.gameModelInfo.totalMinutes} –º–∏–Ω`);
          }
          console.log(`   - –ú–µ—Ç—Ä–∏–∫–∏: ${player.metrics?.length || 0} —à—Ç.`);
          console.log('   ---');
        });
      } else {
        console.log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∏–≥—Ä–æ–∫–∞—Ö');
      }
    } else {
      const error = await response.text();
      console.log('‚ùå –û—à–∏–±–∫–∞ API:', response.status, error);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testPlayerModels();
