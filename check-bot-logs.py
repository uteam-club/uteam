#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ Telegram –±–æ—Ç–∞
–ü–æ–º–æ–≥–∞–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞—Å—Å—ã–ª–∫–æ–π
"""

import os
import subprocess
import sys
from datetime import datetime, timedelta

def check_bot_process():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ –±–æ—Ç"""
    try:
        result = subprocess.run(['ps', 'aux'], capture_output=True, text=True)
        lines = result.stdout.split('\n')
        bot_processes = [line for line in lines if 'bot_direct_db.py' in line]
        
        if bot_processes:
            print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω:")
            for process in bot_processes:
                print(f"   {process}")
            return True
        else:
            print("‚ùå –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")
        return False

def check_bot_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏ –±–æ—Ç–∞"""
    print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞:")
    print("-" * 50)
    
    # –ò—â–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤
    log_files = [
        'bot.log',
        'telegram-bot/bot.log',
        '/var/log/uteam-bot.log',
        'logs/bot.log'
    ]
    
    found_logs = []
    for log_file in log_files:
        if os.path.exists(log_file):
            found_logs.append(log_file)
    
    if not found_logs:
        print("‚ùå –§–∞–π–ª—ã –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è:")
        for log_file in log_files:
            print(f"   - {log_file}")
        return
    
    for log_file in found_logs:
        print(f"\nüìÑ –õ–æ–≥–∏ –∏–∑ {log_file}:")
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫
            result = subprocess.run(['tail', '-50', log_file], capture_output=True, text=True)
            if result.stdout:
                print(result.stdout)
            else:
                print("   (—Ñ–∞–π–ª –ø—É—Å—Ç)")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")

def check_recent_activity():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–¥–∞–≤–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞"""
    print("\nüïê –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–∞–≤–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:")
    print("-" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏
    try:
        # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–∞—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
        result = subprocess.run([
            'journalctl', 
            '--since', '1 hour ago',
            '--grep', 'bot_direct_db'
        ], capture_output=True, text=True)
        
        if result.stdout:
            print("üìã –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å:")
            print(result.stdout)
        else:
            print("‚ùå –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–∞—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤: {e}")

def check_telegram_api():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram API"""
    print("\nüåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram API:")
    print("-" * 50)
    
    try:
        import requests
        response = requests.get('https://api.telegram.org/bot7555689553:AAFSDvBcAC_PU7o5vq3vVoGy5DS8R9q5aPU/getMe', timeout=10)
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                bot_info = data.get('result', {})
                print(f"‚úÖ Telegram API –¥–æ—Å—Ç—É–ø–µ–Ω")
                print(f"   –ë–æ—Ç: @{bot_info.get('username', 'N/A')}")
                print(f"   –ò–º—è: {bot_info.get('first_name', 'N/A')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {data.get('description', 'Unknown error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except ImportError:
        print("‚ùå –ú–æ–¥—É–ª—å requests –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram API: {e}")

def check_database_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
    print("-" * 50)
    
    try:
        import psycopg2
        
        DB_CONFIG = {
            'host': 'rc1d-40uv9fbi8p02b5c0.mdb.yandexcloud.net',
            'port': 6432,
            'database': 'uteam',
            'user': 'uteam_bot_reader',
            'password': 'uteambot567234!',
            'sslmode': 'verify-ca',
            'sslrootcert': './CA.pem'
        }
        
        connection = psycopg2.connect(**DB_CONFIG)
        with connection.cursor() as cursor:
            cursor.execute("SELECT COUNT(*) FROM \"Player\" WHERE \"telegramId\" IS NOT NULL")
            count = cursor.fetchone()[0]
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ")
            print(f"   –ò–≥—Ä–æ–∫–æ–≤ —Å Telegram ID: {count}")
        
        connection.close()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")

def main():
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram –±–æ—Ç–∞")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞
    bot_running = check_bot_process()
    
    if not bot_running:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç: python telegram-bot/bot_direct_db.py")
        print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (.env —Ñ–∞–π–ª)")
        print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
    check_bot_logs()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–∞–≤–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    check_recent_activity()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram API
    check_telegram_api()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    check_database_connection()
    
    print("\nüí° –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("-" * 50)
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–∞—Å—Ç—É–ø–∏–ª–æ")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
    print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –∏–≥—Ä–æ–∫–∞ –µ—Å—Ç—å telegramId –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    main()
