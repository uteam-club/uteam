import { NextRequest, NextResponse } from 'next/server';
import { getToken } from 'next-auth/jwt';
import { db } from '@/lib/db';
import { gpsReport } from '@/db/schema';
import { eq } from 'drizzle-orm';

export async function GET(request: NextRequest) {
  const token = await getToken({ req: request });
  if (!token) {
    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
  }

  try {
    console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ GPS –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –∫–ª—É–±–∞:', token.clubId);

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ GPS –æ—Ç—á–µ—Ç—ã –∫–ª—É–±–∞
    const reports = await db
      .select()
      .from(gpsReport)
      .where(eq(gpsReport.clubId, token.clubId));

    console.log('üìä –í—Å–µ–≥–æ GPS –æ—Ç—á–µ—Ç–æ–≤ –≤ –∫–ª—É–±–µ:', reports.length);

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø—É —Å–æ–±—ã—Ç–∏—è
    const trainingReports = reports.filter(r => r.eventType === 'TRAINING');
    const matchReports = reports.filter(r => r.eventType === 'MATCH');

    console.log('üèÉ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å –æ—Ç—á–µ—Ç–∞–º–∏:', trainingReports.length);
    console.log('‚öΩ –ú–∞—Ç—á–∏ —Å –æ—Ç—á–µ—Ç–∞–º–∏:', matchReports.length);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
    const sampleReports = reports.slice(0, 3).map(r => ({
      id: r.id,
      name: r.name,
      eventType: r.eventType,
      eventId: r.eventId,
      teamId: r.teamId,
      createdAt: r.createdAt
    }));

    return NextResponse.json({
      totalReports: reports.length,
      trainingReports: trainingReports.length,
      matchReports: matchReports.length,
      sampleReports,
      allReports: reports.map(r => ({
        id: r.id,
        name: r.name,
        eventType: r.eventType,
        eventId: r.eventId,
        teamId: r.teamId
      }))
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ GPS –æ—Ç—á–µ—Ç–æ–≤:', error);
    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });
  }
} 