import { pgTable, uuid, varchar, text, timestamp, boolean, integer, jsonb } from 'drizzle-orm/pg-core';

export const gpsReport = pgTable('GpsReport', {
  id: uuid('id').primaryKey().defaultRandom(),
  name: varchar('name', { length: 255 }).notNull(),
  fileName: varchar('fileName', { length: 255 }).notNull(),
  fileUrl: text('fileUrl').notNull(),
  gpsSystem: varchar('gpsSystem', { length: 100 }).notNull(),
  eventType: varchar('eventType', { length: 50 }).notNull(),
  eventId: uuid('eventId').notNull(),
  profileId: uuid('profileId'),
  rawData: jsonb('rawData'),
  processedData: jsonb('processedData'),
  metadata: jsonb('metadata'),
  isProcessed: boolean('isProcessed').default(false).notNull(),
  createdAt: timestamp('createdAt', { withTimezone: true }).defaultNow().notNull(),
  updatedAt: timestamp('updatedAt', { withTimezone: true }).defaultNow().notNull(),
  clubId: uuid('clubId').notNull(),
  uploadedById: uuid('uploadedById').notNull(),
  teamId: uuid('teamId').notNull(),
  ingestStatus: varchar('ingestStatus', { length: 50 }).default('pending').notNull(),
  ingestError: text('ingestError'),
  filePath: text('filePath'),
  profileSnapshot: jsonb('profileSnapshot'),
  canonVersion: text('canonVersion'),
  importMeta: jsonb('importMeta'),
  fileSize: integer('fileSize'),
  gpsProfileId: uuid('gpsProfileId'),
  trainingId: uuid('trainingId'),
  matchId: uuid('matchId'),
  status: varchar('status', { length: 50 }).default('uploaded').notNull(),
  processedAt: timestamp('processedAt', { withTimezone: true }),
  errorMessage: text('errorMessage'),
  playersCount: integer('playersCount').default(0),
  hasEdits: boolean('hasEdits').default(false),
});